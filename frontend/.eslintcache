[{"/home/alijm/FinalProject/frontend/src/index.js":"1","/home/alijm/FinalProject/frontend/src/App.js":"2","/home/alijm/FinalProject/frontend/src/reportWebVitals.js":"3","/home/alijm/FinalProject/frontend/src/components/headers/guestHeader.js":"4","/home/alijm/FinalProject/frontend/src/components/pages/logInPage.js":"5","/home/alijm/FinalProject/frontend/src/components/containers/AppContainer.js":"6","/home/alijm/FinalProject/frontend/src/api.js":"7","/home/alijm/FinalProject/frontend/src/components/pages/logout.js":"8","/home/alijm/FinalProject/frontend/src/components/pages/homePage.js":"9","/home/alijm/FinalProject/frontend/src/components/pages/customers/registerPage.js":"10","/home/alijm/FinalProject/frontend/src/components/headers/customerHeader.js":"11","/home/alijm/FinalProject/frontend/src/theme.js":"12","/home/alijm/FinalProject/frontend/src/components/containers/FormContainer.js":"13"},{"size":490,"mtime":1608046244740,"results":"14","hashOfConfig":"15"},{"size":1394,"mtime":1608036559120,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1607688082240,"results":"17","hashOfConfig":"15"},{"size":2226,"mtime":1608042549820,"results":"18","hashOfConfig":"15"},{"size":2721,"mtime":1608042807560,"results":"19","hashOfConfig":"15"},{"size":473,"mtime":1607910318571,"results":"20","hashOfConfig":"15"},{"size":1338,"mtime":1608034414740,"results":"21","hashOfConfig":"15"},{"size":848,"mtime":1608043172710,"results":"22","hashOfConfig":"15"},{"size":332,"mtime":1608042676990,"results":"23","hashOfConfig":"15"},{"size":3294,"mtime":1608047621370,"results":"24","hashOfConfig":"15"},{"size":2506,"mtime":1608042953460,"results":"25","hashOfConfig":"15"},{"size":164,"mtime":1608036391030,"results":"26","hashOfConfig":"15"},{"size":473,"mtime":1608047068410,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bra87i",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/alijm/FinalProject/frontend/src/index.js",[],"/home/alijm/FinalProject/frontend/src/App.js",[],["57","58"],"/home/alijm/FinalProject/frontend/src/reportWebVitals.js",[],"/home/alijm/FinalProject/frontend/src/components/headers/guestHeader.js",["59"],"/home/alijm/FinalProject/frontend/src/components/pages/logInPage.js",[],"/home/alijm/FinalProject/frontend/src/components/containers/AppContainer.js",[],"/home/alijm/FinalProject/frontend/src/api.js",["60"],"import axios from 'axios';\n\nconst BASE_API_URL = 'http://localhost:8000/api';\n\nconst getTokenFromStorage = {\n    headers: {\n      authorization: 'Bearer ' + localStorage.getItem('AccessToken')\n    }\n  };\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n\n    login: (loginCredentials) =>\n        axios.post(`${BASE_API_URL}/login`, loginCredentials),\n\n    register: (newUserInfo) =>\n        axios.post(`${BASE_API_URL}/register`,{first_name:newUserInfo.firstName,\n             last_name:newUserInfo.lastName,city_id:newUserInfo.cityId, email:newUserInfo.email,\n             password:newUserInfo.password, password_confirmation:newUserInfo.confirmPassword}),\n\n    logout: () =>\n        axios.get(`${BASE_API_URL}/logout`),\n    \n\n    /* getAllCategories: () => \n        axios.get(`${BASE_API_URL}/categories`, getTokenFromStorage),\n    getOneCategory: (id) =>\n        axios.get(`${BASE_API_URL}/categories/${id}`, getTokenFromStorage),\n    addCategory: (category) =>\n        axios.post(`${BASE_API_URL}/categories/`,{name:category.name} , getTokenFromStorage),\n    updateCategory: (category, id) =>\n        axios.put(`${BASE_API_URL}/categories/${id}`, {name:category.name}, getTokenFromStorage),\n    deleteCategory: (id) =>\n        axios.delete(`${BASE_API_URL}/categories/${id}`, getTokenFromStorage), */\n\n}","/home/alijm/FinalProject/frontend/src/components/pages/logout.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/homePage.js",["61","62","63"],"/home/alijm/FinalProject/frontend/src/components/pages/customers/registerPage.js",["64"],"import '../../../CSS/register.css';\nimport React, {useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport FormContainer from '../../containers/FormContainer';\nimport api from '../../../api';\nimport Button from '@material-ui/core/Button';\n\n\n\nexport default function Register() {\n    const history = useHistory();\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [cityId, setCityId] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [submitting, setSubmitting] = useState(false);\n\n    const handleSubmit = async () => {\n       setSubmitting(true);\n       try {\n        await api.register({\n            firstName, lastName, cityId, email, password, confirmPassword\n        });\n        history.push('/')\n    }catch {\n        alert('Failed to Register');\n    } finally {\n        setSubmitting(false);\n    }\n       setTimeout(() => {\n         setSubmitting(false);\n       }, 3000)\n     }\n\n    return(\n        <FormContainer title=\"Register\" >\n        <form>\n            <div className=\"form-group\">\n                <label>First Name</label>\n                <input \n                className=\"form-control\" \n                type=\"text\"\n                value={firstName}\n                onChange={e => setFirstName(e.target.value)}/>\n            </div>\n            <div className=\"form-group\">\n                <label>Last Name</label>\n                <input \n                className=\"form-control\" \n                type=\"text\"\n                value={lastName}\n                onChange={e => setLastName(e.target.value)}/>\n            </div>\n            <div className=\"form-group\">\n                <label>city ID</label>\n                <input \n                className=\"form-control\" \n                type=\"number\"\n                value={cityId}\n                onChange={e => setCityId(e.target.value)}/>\n            </div>\n            <div className=\"form-group\">\n                <label>Email</label>\n                <input \n                className=\"form-control\" \n                type=\"email\"\n                value={email}\n                onChange={e => setEmail(e.target.value)}/>\n            </div>\n            <div className=\"form-group\">\n                <label>Password</label>\n                <input \n                type=\"password\" \n                value={password}\n                onChange={e => setPassword(e.target.value)}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label>Confirm Password</label>\n                <input \n                className=\"form-control\" \n                type=\"password\"\n                value={confirmPassword}\n                onChange={e => setConfirmPassword(e.target.value)}/>\n            </div>\n            <div className=\"form-group\">\n                <button\n                type=\"button\"\n                className=\"btn btn-success\"\n                onClick={handleSubmit}\n                disabled={submitting}>\n                    {submitting? 'REGISTERING...' : 'Register'}\n                </button>\n            </div>\n        </form>\n        \n        </FormContainer>\n      )\n   \n};","/home/alijm/FinalProject/frontend/src/components/headers/customerHeader.js",["65"],"/home/alijm/FinalProject/frontend/src/theme.js",[],"/home/alijm/FinalProject/frontend/src/components/containers/FormContainer.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":107,"column":1,"nodeType":"72","messageId":"73","endLine":123,"endColumn":11},{"ruleId":"74","severity":1,"message":"75","line":5,"column":7,"nodeType":"76","messageId":"77","endLine":5,"endColumn":26},{"ruleId":"74","severity":1,"message":"78","line":1,"column":16,"nodeType":"76","messageId":"77","endLine":1,"endColumn":24},{"ruleId":"74","severity":1,"message":"79","line":2,"column":9,"nodeType":"76","messageId":"77","endLine":2,"endColumn":19},{"ruleId":"74","severity":1,"message":"80","line":4,"column":9,"nodeType":"76","messageId":"77","endLine":4,"endColumn":13},{"ruleId":"74","severity":1,"message":"81","line":6,"column":8,"nodeType":"76","messageId":"77","endLine":6,"endColumn":14},{"ruleId":"70","severity":1,"message":"71","line":111,"column":1,"nodeType":"72","messageId":"73","endLine":130,"endColumn":16},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'getTokenFromStorage' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useHistory' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]