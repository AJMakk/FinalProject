[{"/home/alijm/FinalProject/frontend/src/index.js":"1","/home/alijm/FinalProject/frontend/src/App.js":"2","/home/alijm/FinalProject/frontend/src/reportWebVitals.js":"3","/home/alijm/FinalProject/frontend/src/components/headers/guestHeader.js":"4","/home/alijm/FinalProject/frontend/src/components/containers/AppContainer.js":"5","/home/alijm/FinalProject/frontend/src/api.js":"6","/home/alijm/FinalProject/frontend/src/components/headers/customerHeader.js":"7","/home/alijm/FinalProject/frontend/src/theme.js":"8","/home/alijm/FinalProject/frontend/src/components/containers/FormContainer.js":"9","/home/alijm/FinalProject/frontend/src/components/pages/home.js":"10","/home/alijm/FinalProject/frontend/src/components/pages/logIn.js":"11","/home/alijm/FinalProject/frontend/src/components/pages/logOut.js":"12","/home/alijm/FinalProject/frontend/src/components/pages/customers/register/register.js":"13","/home/alijm/FinalProject/frontend/src/components/pages/customers/register/citySelect.js":"14","/home/alijm/FinalProject/frontend/src/components/pages/customers/search/allTechnicians.js":"15","/home/alijm/FinalProject/frontend/src/components/pages/customers/search/results.js":"16","/home/alijm/FinalProject/frontend/src/components/pages/customers/appointments/schedule.js":"17","/home/alijm/FinalProject/frontend/src/components/pages/customers/appointments/appointments.js":"18","/home/alijm/FinalProject/frontend/src/components/headers/technicianHeader.js":"19","/home/alijm/FinalProject/frontend/src/components/pages/technicians/appointments/today-appointments.js":"20","/home/alijm/FinalProject/frontend/src/components/pages/technicians/appointments/appointments.js":"21","/home/alijm/FinalProject/frontend/src/components/pages/technicians/appointments/schedule.js":"22","/home/alijm/FinalProject/frontend/src/components/pages/customers/appointments/today-appointments.js":"23","/home/alijm/FinalProject/frontend/src/components/pages/technicians/apply/apply.js":"24","/home/alijm/FinalProject/frontend/src/components/pages/technicians/apply/categorySelect.js":"25","/home/alijm/FinalProject/frontend/src/components/pages/customers/profiles/profile.js":"26","/home/alijm/FinalProject/frontend/src/components/pages/technicians/profiles/profile.js":"27"},{"size":490,"mtime":1608046244740,"results":"28","hashOfConfig":"29"},{"size":3058,"mtime":1610028779749,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1607688082240,"results":"31","hashOfConfig":"29"},{"size":4919,"mtime":1609857347320,"results":"32","hashOfConfig":"29"},{"size":473,"mtime":1607910318571,"results":"33","hashOfConfig":"29"},{"size":1656,"mtime":1609858821700,"results":"34","hashOfConfig":"29"},{"size":5558,"mtime":1609374602806,"results":"35","hashOfConfig":"29"},{"size":467,"mtime":1608306450920,"results":"36","hashOfConfig":"29"},{"size":473,"mtime":1608047068410,"results":"37","hashOfConfig":"29"},{"size":2249,"mtime":1609373859996,"results":"38","hashOfConfig":"29"},{"size":8044,"mtime":1609939920509,"results":"39","hashOfConfig":"29"},{"size":856,"mtime":1609859140090,"results":"40","hashOfConfig":"29"},{"size":6045,"mtime":1608897432184,"results":"41","hashOfConfig":"29"},{"size":1985,"mtime":1608334403976,"results":"42","hashOfConfig":"29"},{"size":9064,"mtime":1608542056466,"results":"43","hashOfConfig":"29"},{"size":8619,"mtime":1609423281970,"results":"44","hashOfConfig":"29"},{"size":1770,"mtime":1609372710086,"results":"45","hashOfConfig":"29"},{"size":6894,"mtime":1609373745976,"results":"46","hashOfConfig":"29"},{"size":6923,"mtime":1610028806989,"results":"47","hashOfConfig":"29"},{"size":815,"mtime":1610029472059,"results":"48","hashOfConfig":"29"},{"size":7548,"mtime":1609373140246,"results":"49","hashOfConfig":"29"},{"size":1284,"mtime":1610045046703,"results":"50","hashOfConfig":"29"},{"size":816,"mtime":1609371827696,"results":"51","hashOfConfig":"29"},{"size":6509,"mtime":1609376444186,"results":"52","hashOfConfig":"29"},{"size":2013,"mtime":1609375930836,"results":"53","hashOfConfig":"29"},{"size":3186,"mtime":1610028661460,"results":"54","hashOfConfig":"29"},{"size":3190,"mtime":1610028641259,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"bra87i",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/alijm/FinalProject/frontend/src/index.js",[],["116","117"],"/home/alijm/FinalProject/frontend/src/App.js",[],"/home/alijm/FinalProject/frontend/src/reportWebVitals.js",[],"/home/alijm/FinalProject/frontend/src/components/headers/guestHeader.js",["118","119"],"/home/alijm/FinalProject/frontend/src/components/containers/AppContainer.js",[],"/home/alijm/FinalProject/frontend/src/api.js",[],"/home/alijm/FinalProject/frontend/src/components/headers/customerHeader.js",["120","121"],"import React, {useState} from \"react\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport api from '../../api';\nimport { \n  AppBar, \n  Toolbar, \n  Typography, \n  makeStyles,\n  Button,\n  fade,\n  TextField,\n } from '@material-ui/core';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport HelpIcon from '@material-ui/icons/Help';\n\nconst useStyles = makeStyles(() => ({\n  header: {\n     background: \"none\",\n     paddingRight: \"79px\",\n     paddingLeft: \"118px\",\n  },\n\n  logo: {\n    fontFamily: \"Work Sans, sans-serif\",\n    fontWeight: 600,\n    color: \"black\",\n    textAlign: \"left\",\n  },\n\n  searchContainer: {\n    display: \"flex\",\n    backgroundColor: fade('#00000', 0.15),\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    marginTop: \"-15px\",\n    marginBottom: \"5px\",\n  },\n\n  searchIcon: {\n    alignSelf: \"flex-end\",\n    marginBottom: \"5px\",\n    color:'#000000'\n  },\n\n  searchInput: {\n    width: \"250px\",\n    margin: \"5px\",\n  },\n\n  menuButton: {\n    fontFamily: \"Open Sans, sans-serif\",\n    fontWeight: 700,\n    size: \"18px\",\n    marginLeft: \"20px\",\n  },\n\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n\n  rightSideButtons: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n\n}));\n\nconst customerHeaderData = [\n  {\n    label: \"All Technicians\",\n    href: \"/alltechnicians\",\n  },\n  {\n    label: <HelpIcon ></HelpIcon>,\n    href: \"/help\",\n  },\n  {\n    label: <NotificationsIcon></NotificationsIcon>,\n    href: \"/notifications\",\n  },\n];\n\nexport default function CustomerHeader() {\n  const { header, logo, menuButton, toolbar } = useStyles();\n  const classes = useStyles();\n  const [filter, setFilter] = useState(\"\");\n  const [anchorEl, setAnchorEl] = useState(null);\n  let history = useHistory();\n\n  const handleSearchChange = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const handleSearchKeypress = (e) => {\n    //it triggers by pressing the enter key\n    if (e.key === 'Enter') {\n      history.push(\"/search\");\n    }\n  };\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleProfile = () => {\n    history.push(\"/customer/myprofile\")\n  }\n\n  const handleAppointments = () => {\n    history.push(\"/customer/myappointments\")\n  }\n\n  const handleLogout = () => {\n    api.logout().then(res => {\n      console.log(\"res: \",res);\n      \n      localStorage.removeItem('AccessToken');\n      localStorage.removeItem('UsersName');\n      localStorage.clear();\n\n      history.push(\"/\");\n      window.location.reload();\n      alert(res.data.message) ;\n    });\n      \n}\n  const displayDesktop = () => {\n    return (\n      <Toolbar className={toolbar}>\n      <Button\n         {...{\n           key: \"logoHome\",\n           color:\"black\",\n           to: \"/\",\n           component: RouterLink,\n           className: logo\n         }} \n       >\n       {TechieFindLogo}\n       {/* <img src=\"TFlogo.png\" alt=\"logo\"  /> */}\n       </Button>\n      \n       <div className={classes.searchContainer}>\n            <SearchIcon className={classes.searchIcon} />\n            <TextField\n              className={classes.searchInput}\n              onKeyPress={handleSearchKeypress}\n              onChange={handleSearchChange}\n              label=\"search for technicians here!\"\n              variant=\"standard\"\n            />\n          </div>\n      <div className={classes.rightSideButtons}>   \n        <div>{getMenuButtons()}</div>\n        <div>\n          <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n            <AccountCircleIcon></AccountCircleIcon>\n          </Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <MenuItem onClick={handleProfile}>My Profile</MenuItem>\n            <MenuItem onClick={handleAppointments}>My Appointments</MenuItem>\n            <MenuItem onClick={handleLogout}>Logout</MenuItem>\n          </Menu>\n        </div> \n      </div>  \n      </Toolbar>\n    );\n  };\n  \n  const TechieFindLogo = (\n    <Typography variant=\"h6\" component=\"h1\" className={logo}>\n      TechieFind\n    </Typography> \n    );\n\n  const getMenuButtons = () => {\n    return customerHeaderData.map(({label, href}) => {\n      return (\n        <Button\n          {...{\n            key: label,\n            color:\"black\",\n            to: href,\n            component: RouterLink,\n            className: menuButton\n          }} \n        >\n        {label}\n        </Button>\n      );\n    });\n  };\n\n  return (\n    <header>\n      <AppBar className={header} elevation={0}>\n        {displayDesktop()}\n      </AppBar>\n    </header>\n  );\n}\n\n{/* <nav>\n      <NavLink exact activeClassName=\"active\"  to=\"/home\">\n        Home \n      </NavLink>\n      <NavLink activeClassName=\"active\"  to=\"/search\">\n        Search For Technicians\n      </NavLink>\n      <NavLink activeClassName=\"active\"  to=\"/help\">\n        Help\n      </NavLink>\n      <NavLink activeClassName=\"active\"  to=\"/notifications\">\n        Notifications\n      </NavLink>\n      <NavLink activeClassName=\"active\"  to=\"/logout\">\n        Log Out\n      </NavLink>\n      <NavLink activeClassName=\"active\"  to=\"/myprofile\">\n        My Profile\n      </NavLink>\n    </nav>  */}","/home/alijm/FinalProject/frontend/src/theme.js",[],"/home/alijm/FinalProject/frontend/src/components/containers/FormContainer.js",[],["122","123"],"/home/alijm/FinalProject/frontend/src/components/pages/home.js",["124","125"],"import React, {useState} from \"react\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport Container from '@material-ui/core/Container/Container';\nimport { makeStyles,Button} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    homeContainer: {\n      marginTop: theme.spacing(10),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    homeMainText: {\n      marginTop: theme.spacing(10),\n      marginRight: theme.spacing(53),\n      backgroundColor:'clear' ,\n      fontSize:'23px',\n      fontWeight: 'bolder',\n\n    },\n    homeSideText: {\n        marginTop: theme.spacing(2),\n        marginRight: theme.spacing(35),\n        backgroundColor:'clear' ,\n        fontSize:'16px',\n    },\n    buttons: {\n        marginRight: theme.spacing(47),\n      },\n    registerButton: {\n        fontFamily: \"Open Sans, sans-serif\",\n        fontWeight: 700,\n        size: \"18px\",\n        marginLeft: \"20px\",\n        backgroundColor:'#E0E0E0',\n        textTransform:'none',\n      },\n    allTechniciansButton: {\n        fontFamily: \"Open Sans, sans-serif\",\n        fontWeight: 700,\n        size: \"18px\",\n        marginLeft: \"20px\",\n        backgroundColor:'#E0E0E0',\n        textTransform:'none',\n      },\n  }));\n  \nexport default function Home() {\n    const classes = useStyles();\n    let history = useHistory();\n\n\n    const redirectToRegister = () => {\n        history.push(\"/register\")\n    }\n    \n    const redirectToAllTechnicians = () => {\n        history.push(\"/alltechnicians\")\n    }\n   \nreturn (\n    <Container className={classes.homeContainer}>\n        <p className={classes.homeMainText}>Get a technician to your doorstep !</p>\n        <p className={classes.homeSideText}>TechieFind helps you find the right technician for the job hassle-free.</p>\n        <div className={classes.buttons}>\n        <Button \n        className={classes.registerButton}\n        onClick={redirectToRegister}\n        >\n            Join TechieFind Now!\n        </Button>\n        <Button \n        className={classes.allTechniciansButton}\n        onClick={redirectToAllTechnicians}\n        >\n            See all the technicians available.\n        </Button>\n\n        </div>\n       \n    </Container>\n)\n    \n};","/home/alijm/FinalProject/frontend/src/components/pages/logIn.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/logOut.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/customers/register/register.js",["126","127"],"import React, {useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport api from '../../../../api';\nimport AsynchronousSearchCities from './citySelect';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"/\">\n        TechieFind\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(10),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Register() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [cityId, setCityId] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n\n  const handleChange = (event,value) => {\n    let newCityId =  value.id;\n    setCityId(newCityId);\n    console.log('child City Id: ', newCityId);\n  }\n\n  const handleSubmit = async () => {\n    setSubmitting(true);\n    try {\n     await api.register({\n         firstName, lastName, cityId, email, password, confirmPassword\n     });\n     history.push('/')\n    }\n    catch {\n     alert('Failed to Register');\n    } \n    finally {\n     setSubmitting(false);\n    }\n    setTimeout(() => {\n      setSubmitting(false);\n    }, 3000)\n    };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                value={firstName}\n                onChange={e => setFirstName(e.target.value)}\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                value={lastName}\n                onChange={e => setLastName(e.target.value)}\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                name=\"password\"\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                name=\"confirmPassword\"\n                value={confirmPassword}\n                onChange={e => setConfirmPassword(e.target.value)}\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"confirmPassword\"\n                autoComplete=\"current-confirm-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n            <AsynchronousSearchCities handleChange={handleChange} ></AsynchronousSearchCities>\n            </Grid>\n            {/* <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid> */}\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"inherit\"\n            className={classes.submit}\n            onClick={handleSubmit}\n            disabled={submitting}>\n            {submitting? 'Registering...' : 'Register'}\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"login\" variant=\"body2\">\n                Already have an account? Log in !\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","/home/alijm/FinalProject/frontend/src/components/pages/customers/register/citySelect.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/customers/search/allTechnicians.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/customers/search/results.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/customers/appointments/schedule.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/customers/appointments/appointments.js",[],"/home/alijm/FinalProject/frontend/src/components/headers/technicianHeader.js",["128"],"/home/alijm/FinalProject/frontend/src/components/pages/technicians/appointments/today-appointments.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/technicians/appointments/appointments.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/technicians/appointments/schedule.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/customers/appointments/today-appointments.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/technicians/apply/apply.js",["129","130","131","132","133","134","135"],"import React, {useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport api from '../../../../api';\nimport AsynchronousSearchCities from '../../customers/register/citySelect';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport AsynchronousSearchCategories from './categorySelect';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"/\">\n        TechieFind\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(10),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Apply() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [categoryId, setCategoryId] = useState('');\n  const [cityId, setCityId] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n\n  const handleCategoryChange = (event,value) => {\n    let newCategoryId =  value.id;\n    setCategoryId(newCategoryId);\n    console.log('child Category Id: ', newCategoryId);\n  }\n\n  const handleCityChange = (event,value) => {\n    let newCityId =  value.id;\n    setCityId(newCityId);\n    console.log('child City Id: ', newCityId);\n  }\n\n  /* const handleSubmit = async () => {\n    setSubmitting(true);\n    try {\n     await api.register({\n         firstName, lastName, cityId, email, password, confirmPassword\n     });\n     history.push('/')\n    }\n    catch {\n     alert('Failed to Register');\n    } \n    finally {\n     setSubmitting(false);\n    }\n    setTimeout(() => {\n      setSubmitting(false);\n    }, 3000)\n    }; */\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                value={firstName}\n                onChange={e => setFirstName(e.target.value)}\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                value={lastName}\n                onChange={e => setLastName(e.target.value)}\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                name=\"password\"\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                name=\"confirmPassword\"\n                value={confirmPassword}\n                onChange={e => setConfirmPassword(e.target.value)}\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"confirmPassword\"\n                autoComplete=\"current-confirm-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n            <AsynchronousSearchCategories handleChange={handleCategoryChange} ></AsynchronousSearchCategories>\n            </Grid>\n            <Grid item xs={12}>\n            <AsynchronousSearchCities handleChange={handleCityChange} ></AsynchronousSearchCities>\n            </Grid>\n            {/* <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid> */}\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"inherit\"\n            className={classes.submit}\n            disabled={submitting}>\n            {submitting? 'Sending your application...' : 'Apply'}\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"login\" variant=\"body2\">\n                Already have an account? Log in !\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","/home/alijm/FinalProject/frontend/src/components/pages/technicians/apply/categorySelect.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/customers/profiles/profile.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/technicians/profiles/profile.js",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":92,"column":10,"nodeType":"142","messageId":"143","endLine":92,"endColumn":16},{"ruleId":"144","severity":1,"message":"145","line":211,"column":1,"nodeType":"146","messageId":"147","endLine":227,"endColumn":11},{"ruleId":"140","severity":1,"message":"141","line":91,"column":10,"nodeType":"142","messageId":"143","endLine":91,"endColumn":16},{"ruleId":"144","severity":1,"message":"145","line":218,"column":1,"nodeType":"146","messageId":"147","endLine":237,"endColumn":16},{"ruleId":"136","replacedBy":"148"},{"ruleId":"138","replacedBy":"149"},{"ruleId":"140","severity":1,"message":"150","line":1,"column":16,"nodeType":"142","messageId":"143","endLine":1,"endColumn":24},{"ruleId":"140","severity":1,"message":"151","line":2,"column":18,"nodeType":"142","messageId":"143","endLine":2,"endColumn":28},{"ruleId":"140","severity":1,"message":"152","line":8,"column":8,"nodeType":"142","messageId":"143","endLine":8,"endColumn":24},{"ruleId":"140","severity":1,"message":"153","line":9,"column":8,"nodeType":"142","messageId":"143","endLine":9,"endColumn":16},{"ruleId":"140","severity":1,"message":"141","line":201,"column":10,"nodeType":"142","messageId":"143","endLine":201,"endColumn":16},{"ruleId":"140","severity":1,"message":"154","line":3,"column":8,"nodeType":"142","messageId":"143","endLine":3,"endColumn":11},{"ruleId":"140","severity":1,"message":"152","line":8,"column":8,"nodeType":"142","messageId":"143","endLine":8,"endColumn":24},{"ruleId":"140","severity":1,"message":"153","line":9,"column":8,"nodeType":"142","messageId":"143","endLine":9,"endColumn":16},{"ruleId":"140","severity":1,"message":"155","line":49,"column":9,"nodeType":"142","messageId":"143","endLine":49,"endColumn":16},{"ruleId":"140","severity":1,"message":"156","line":52,"column":10,"nodeType":"142","messageId":"143","endLine":52,"endColumn":20},{"ruleId":"140","severity":1,"message":"157","line":53,"column":10,"nodeType":"142","messageId":"143","endLine":53,"endColumn":16},{"ruleId":"140","severity":1,"message":"158","line":57,"column":22,"nodeType":"142","messageId":"143","endLine":57,"endColumn":35},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'filter' is assigned a value but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["159"],["160"],"'useState' is defined but never used.","'RouterLink' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'api' is defined but never used.","'history' is assigned a value but never used.","'categoryId' is assigned a value but never used.","'cityId' is assigned a value but never used.","'setSubmitting' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]