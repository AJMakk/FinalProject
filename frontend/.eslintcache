[{"/home/alijm/FinalProject/frontend/src/index.js":"1","/home/alijm/FinalProject/frontend/src/App.js":"2","/home/alijm/FinalProject/frontend/src/reportWebVitals.js":"3","/home/alijm/FinalProject/frontend/src/components/containers/AppContainer.js":"4","/home/alijm/FinalProject/frontend/src/api.js":"5","/home/alijm/FinalProject/frontend/src/theme.js":"6","/home/alijm/FinalProject/frontend/src/components/containers/FormContainer.js":"7","/home/alijm/FinalProject/frontend/src/components/pages/logIn.js":"8","/home/alijm/FinalProject/frontend/src/components/pages/logOut.js":"9","/home/alijm/FinalProject/frontend/src/components/pages/customers/register/register.js":"10","/home/alijm/FinalProject/frontend/src/components/pages/customers/register/citySelect.js":"11","/home/alijm/FinalProject/frontend/src/components/pages/customers/search/allTechnicians.js":"12","/home/alijm/FinalProject/frontend/src/components/pages/customers/search/results.js":"13","/home/alijm/FinalProject/frontend/src/components/pages/customers/appointments/schedule.js":"14","/home/alijm/FinalProject/frontend/src/components/pages/customers/appointments/appointments.js":"15","/home/alijm/FinalProject/frontend/src/components/pages/technicians/appointments/today-appointments.js":"16","/home/alijm/FinalProject/frontend/src/components/pages/technicians/appointments/appointments.js":"17","/home/alijm/FinalProject/frontend/src/components/pages/technicians/appointments/schedule.js":"18","/home/alijm/FinalProject/frontend/src/components/pages/customers/appointments/today-appointments.js":"19","/home/alijm/FinalProject/frontend/src/components/pages/home/guestHome.js":"20","/home/alijm/FinalProject/frontend/src/components/pages/home/customerHome.js":"21","/home/alijm/FinalProject/frontend/src/components/pages/home/technicianHome.js":"22","/home/alijm/FinalProject/frontend/src/components/headers/customerHeader/customerHeader.js":"23","/home/alijm/FinalProject/frontend/src/components/headers/guestHeader/guestHeader.js":"24","/home/alijm/FinalProject/frontend/src/components/headers/technicianHeader/technicianHeader.js":"25","/home/alijm/FinalProject/frontend/src/components/headers/customerHeader/customerDropDownMenu.js":"26","/home/alijm/FinalProject/frontend/src/components/headers/guestHeader/guestDropDownMenu.js":"27","/home/alijm/FinalProject/frontend/src/components/headers/technicianHeader/technicianDropDownMenu.js":"28","/home/alijm/FinalProject/frontend/src/components/pages/technicians/register/register.js":"29","/home/alijm/FinalProject/frontend/src/components/pages/technicians/register/categorySelect.js":"30","/home/alijm/FinalProject/frontend/src/components/headers/customerHeader/notifications.js":"31","/home/alijm/FinalProject/frontend/src/components/pages/customers/search/ratings.js":"32","/home/alijm/FinalProject/frontend/src/components/pages/customers/appointments/schedule2.js":"33","/home/alijm/FinalProject/frontend/src/components/pages/customers/search/requestAppointment.js":"34","/home/alijm/FinalProject/frontend/src/components/pages/technicians/appointments/approvalAppointments.js":"35","/home/alijm/FinalProject/frontend/src/components/headers/guestHeader/allTechnicians.js":"36","/home/alijm/FinalProject/frontend/src/components/headers/technicianHeader/notifications.js":"37","/home/alijm/FinalProject/frontend/src/components/pages/customers/profile/profile.js":"38","/home/alijm/FinalProject/frontend/src/components/pages/technicians/profiles/profile.js":"39","/home/alijm/FinalProject/frontend/src/components/pages/customers/appointments/completedAppointments.js":"40","/home/alijm/FinalProject/frontend/src/components/pages/customers/chat/chat.js":"41"},{"size":490,"mtime":1610761297280,"results":"42","hashOfConfig":"43"},{"size":4880,"mtime":1611180597810,"results":"44","hashOfConfig":"43"},{"size":362,"mtime":1607688082240,"results":"45","hashOfConfig":"43"},{"size":473,"mtime":1607910318571,"results":"46","hashOfConfig":"43"},{"size":3370,"mtime":1610828635750,"results":"47","hashOfConfig":"43"},{"size":467,"mtime":1608306450920,"results":"48","hashOfConfig":"43"},{"size":473,"mtime":1608047068410,"results":"49","hashOfConfig":"43"},{"size":5301,"mtime":1610924272090,"results":"50","hashOfConfig":"43"},{"size":856,"mtime":1609859140090,"results":"51","hashOfConfig":"43"},{"size":6083,"mtime":1610924201480,"results":"52","hashOfConfig":"43"},{"size":1985,"mtime":1608334403976,"results":"53","hashOfConfig":"43"},{"size":9655,"mtime":1610907875730,"results":"54","hashOfConfig":"43"},{"size":9841,"mtime":1610994231490,"results":"55","hashOfConfig":"43"},{"size":1728,"mtime":1610643724570,"results":"56","hashOfConfig":"43"},{"size":1171,"mtime":1610898344790,"results":"57","hashOfConfig":"43"},{"size":815,"mtime":1610029472059,"results":"58","hashOfConfig":"43"},{"size":1187,"mtime":1610989758370,"results":"59","hashOfConfig":"43"},{"size":3166,"mtime":1610989243740,"results":"60","hashOfConfig":"43"},{"size":822,"mtime":1610674076460,"results":"61","hashOfConfig":"43"},{"size":2344,"mtime":1610808895120,"results":"62","hashOfConfig":"43"},{"size":2435,"mtime":1610563846873,"results":"63","hashOfConfig":"43"},{"size":2407,"mtime":1610563834013,"results":"64","hashOfConfig":"43"},{"size":4484,"mtime":1611180583240,"results":"65","hashOfConfig":"43"},{"size":3641,"mtime":1610808782840,"results":"66","hashOfConfig":"43"},{"size":3786,"mtime":1611180445410,"results":"67","hashOfConfig":"43"},{"size":3507,"mtime":1610991836820,"results":"68","hashOfConfig":"43"},{"size":2989,"mtime":1610563902703,"results":"69","hashOfConfig":"43"},{"size":3524,"mtime":1610731698498,"results":"70","hashOfConfig":"43"},{"size":6970,"mtime":1610924237630,"results":"71","hashOfConfig":"43"},{"size":2013,"mtime":1609375930836,"results":"72","hashOfConfig":"43"},{"size":3651,"mtime":1610904852810,"results":"73","hashOfConfig":"43"},{"size":422,"mtime":1610663078420,"results":"74","hashOfConfig":"43"},{"size":3149,"mtime":1610989106560,"results":"75","hashOfConfig":"43"},{"size":5994,"mtime":1610907627830,"results":"76","hashOfConfig":"43"},{"size":10757,"mtime":1610914398460,"results":"77","hashOfConfig":"43"},{"size":9882,"mtime":1610906788040,"results":"78","hashOfConfig":"43"},{"size":3657,"mtime":1610904783060,"results":"79","hashOfConfig":"43"},{"size":3824,"mtime":1610917107530,"results":"80","hashOfConfig":"43"},{"size":3540,"mtime":1610916879190,"results":"81","hashOfConfig":"43"},{"size":10467,"mtime":1610993132520,"results":"82","hashOfConfig":"43"},{"size":16384,"mtime":1611180876430,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"bra87i",{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"86"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"86"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"86"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"86"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"86"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"86"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"86"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"86"},"/home/alijm/FinalProject/frontend/src/index.js",[],["197","198"],"/home/alijm/FinalProject/frontend/src/App.js",["199","200","201"],"import React from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from './theme';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport GuestHeader from './components/headers/guestHeader/guestHeader';\nimport CustomerHeader from './components/headers/customerHeader/customerHeader';\nimport TechnicianHeader from './components/headers/technicianHeader/technicianHeader';\n\n\nimport Login from './components/pages/logIn';\nimport CustomerRegister from './components/pages/customers/register/register';\nimport TechnicianRegister from './components/pages/technicians/register/register';\nimport Logout from './components/pages/logOut';\nimport GuestHome from './components/pages/home/guestHome';\nimport CustomerHome from './components/pages/home/customerHome';\nimport TechnicianHome from './components/pages/home/technicianHome';\nimport AllTechniciansTable from './components/pages/customers/search/allTechnicians';\nimport Results from './components/pages/customers/search/results';\nimport Appointments from './components/pages/customers/appointments/schedule';\nimport CustomerProfile  from './components/pages/customers/profile/profile';\nimport TechnicianProfile  from './components/pages/technicians/profiles/profile';\nimport TechnicianSchedule from './components/pages/technicians/appointments/schedule';\nimport Demo from './components/pages/customers/appointments/schedule2';\nimport RequestAppointment from './components/pages/customers/search/requestAppointment';\nimport ApprovalAppointments from './components/pages/technicians/appointments/approvalAppointments';\nimport Echo from 'laravel-echo';\nimport Pusher from \"pusher-js\";\nimport GuestAllTechnicians from './components/headers/guestHeader/allTechnicians';\nimport CompletedAppointments from './components/pages/customers/appointments/completedAppointments';\nimport Chat from './components/pages/customers/chat/chat';\n\n\n\n\nfunction Header() {\n   if (!localStorage.getItem('CustomerAccessToken'))\n   {\n      if (!localStorage.getItem('TechnicianAccessToken'))\n      {\n        return <GuestHeader />;\n      } else {\n         return <TechnicianHeader />;\n      }\n   } else {\n      return <CustomerHeader />;\n      }\n}\n\nfunction Home() {\n   if (localStorage.getItem('CustomerAccessToken'))\n   {\n      return <CustomerHome />;\n   } else {\n      if (localStorage.getItem('TechnicianAccessToken'))\n      {\n         return <TechnicianHome />;\n      } else {\n         return <GuestHome />;\n      }\n   }\n}\nfunction App() {\n  return (\n   <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Router className=\"App__Container\">\n         <Header />\n            <Switch>\n               <Route exact path=\"/\">\n                  <Home></Home>\n               </Route>\n               <Route exact path=\"/login\">\n                  <Login></Login>\n               </Route>\n               <Route exact path=\"/customer/register\">\n                  <CustomerRegister></CustomerRegister>\n               </Route>\n               <Route exact path=\"/tradesman/register\">\n                  <TechnicianRegister></TechnicianRegister>\n               </Route>\n               <Route exact path=\"/logout\">\n                  <Logout></Logout>\n               </Route>\n               <Route exact path=\"/alltradesmen\">\n                  <AllTechniciansTable></AllTechniciansTable>\n               </Route>\n               <Route exact path=\"/guest/alltradesmen\">\n                  <GuestAllTechnicians></GuestAllTechnicians>\n               </Route>\n               <Route exact path=\"/search\">\n                  <Results></Results>\n               </Route>\n               <Route exact path=\"/customer/myappointments\">\n                  <Demo></Demo>\n               </Route>\n               <Route exact path=\"/customer/profile\">\n                  <CustomerProfile></CustomerProfile>\n               </Route>\n               <Route exact path=\"/tradesman/myschedule\">\n                  <TechnicianSchedule></TechnicianSchedule>\n               </Route>\n               <Route exact path=\"/tradesman/profile\">\n                  <TechnicianProfile></TechnicianProfile>\n               </Route>\n               <Route exact path=\"/:id/requestappointment\">\n                  <RequestAppointment></RequestAppointment>\n               </Route>\n               <Route exact path=\"/tradesman/tentativeappointments\">\n                  <ApprovalAppointments></ApprovalAppointments>\n               </Route>\n               <Route exact path=\"/customer/completedappointments\">\n                  <CompletedAppointments></CompletedAppointments>\n               </Route>\n               <Route exact path=\"/customer/1/messages\">\n                  <Chat></Chat>\n               </Route>\n            </Switch>\n      </Router>\n   </ThemeProvider>\n\n);\n}\n\nexport default App;\n","/home/alijm/FinalProject/frontend/src/reportWebVitals.js",[],"/home/alijm/FinalProject/frontend/src/components/containers/AppContainer.js",[],"/home/alijm/FinalProject/frontend/src/api.js",[],"/home/alijm/FinalProject/frontend/src/theme.js",[],"/home/alijm/FinalProject/frontend/src/components/containers/FormContainer.js",[],["202","203"],"/home/alijm/FinalProject/frontend/src/components/pages/logIn.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/logOut.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/customers/register/register.js",["204","205"],"import React, {useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport api from '../../../../api';\nimport AsynchronousSearchCities from './citySelect';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"/\">\n        TradieFind\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(10),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function CustomerRegister() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [cityId, setCityId] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n\n  const handleChange = (event,value) => {\n    let newCityId =  value.id;\n    setCityId(newCityId);\n    console.log('child City Id: ', newCityId);\n  }\n\n  const handleSubmit = async () => {\n    setSubmitting(true);\n    try {\n     await api.customerRegister({\n         firstName, lastName, cityId, email, password, confirmPassword\n     });\n     history.push('/')\n    }\n    catch {\n     alert('Failed to Register');\n    } \n    finally {\n     setSubmitting(false);\n    }\n    setTimeout(() => {\n      setSubmitting(false);\n    }, 3000)\n    };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                value={firstName}\n                onChange={e => setFirstName(e.target.value)}\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                value={lastName}\n                onChange={e => setLastName(e.target.value)}\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                name=\"password\"\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                name=\"confirmPassword\"\n                value={confirmPassword}\n                onChange={e => setConfirmPassword(e.target.value)}\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"confirmPassword\"\n                autoComplete=\"current-confirm-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n            <AsynchronousSearchCities handleChange={handleChange} ></AsynchronousSearchCities>\n            </Grid>\n            {/* <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid> */}\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"inherit\"\n            className={classes.submit}\n            onClick={handleSubmit}\n            disabled={submitting}>\n            {submitting? 'Registering...' : 'Register'}\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"http://localhost:3000/login\" variant=\"body2\">\n                Already have an account? Log in !\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","/home/alijm/FinalProject/frontend/src/components/pages/customers/register/citySelect.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/customers/search/allTechnicians.js",["206","207"],"import React, {useEffect,useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport api from '../../../../api';\nimport Link from '@material-ui/core/Link';\nimport Rating from '@material-ui/lab/Rating';\nimport Box from '@material-ui/core/Box';\n\n\n\nfunction createData(name, speciality, rating, city, id) {\n  return { name, speciality, rating, city, id };\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: \"Name\" },\n  { id: 'speciality', numeric: false, disablePadding: false, label: 'Speciality' },\n  { id: 'rating', numeric: true, disablePadding: false, label: 'Rating' },\n  { id: 'city', numeric: false, disablePadding: false, label: 'City' },\n  { id: 'Appointment', numeric: false, disablePadding: false, label: 'Appointment' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  \n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'center' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n    marginLeft: theme.spacing(3.5),\n\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n\n  return (\n    \n    <Toolbar\n      className={clsx(classes.root)}\n    >\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Tradesmen\n        </Typography>\n      \n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      \n    </Toolbar>\n  );\n};\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginTop:theme.spacing(10),\n    marginBottom: theme.spacing(2),\n    opacity:'0.75',\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function ApprovalAppointments() {\n  const classes = useStyles();\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('rating');\n  const [page, setPage] = useState(0);\n  const [dense, setDense] = useState(true);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [rows, setRows] = useState([]);\n\n  const holderData = [];\n\n  const getAllTechniciansData= async () => {\n    await api.getAllTechnicians().then(res => {\n    const techData = res.data.technicians;\n    techData.forEach(obj=>{\n    holderData.push(createData(obj.first_name + ' '+ obj.last_name, obj.category.name, obj.ratings, obj.city.city, obj.id))\n    })\n    })\n    setRows(holderData);\n    console.log('rows: ', rows)\n}\n  useEffect(() => {\n    if(!rows.length) {\n      getAllTechniciansData();\n    }\n  }, [])\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  let history = useHistory();\n\n  const preventDefault = () => {\n    history.push('/tradesman/schedule')\n  }\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      tabIndex={-1}\n                      key={row.name}\n                     \n                    >\n                      <TableCell padding=\"checkbox\">\n                        \n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"left\">{row.speciality}</TableCell>\n                      <TableCell align=\"center\">\n                        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n                          <Rating name=\"read-only\" value={row.rating} readOnly />\n                        </Box>\n                      </TableCell>\n                      <TableCell align=\"left\">{row.city}</TableCell>\n                      <TableCell align=\"left\"><Link component=\"button\" variant=\"body2\" onClick={() => { \n                        history.push('/' + row.id + '/requestappointment');}}\n                        >\n                          Request\n                        </Link>\n                      \n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}","/home/alijm/FinalProject/frontend/src/components/pages/customers/search/results.js",["208","209","210"],"import React, {useEffect,useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport api from '../../../../api';\nimport Link from '@material-ui/core/Link';\nimport Rating from '@material-ui/lab/Rating';\nimport Box from '@material-ui/core/Box';\n\n\n\nfunction createData(name, speciality, rating, city, id) {\n  return { name, speciality, rating, city, id };\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: \"Name\" },\n  { id: 'speciality', numeric: false, disablePadding: false, label: 'Speciality' },\n  { id: 'rating', numeric: true, disablePadding: false, label: 'Rating' },\n  { id: 'city', numeric: false, disablePadding: false, label: 'City' },\n  { id: 'Appointment', numeric: false, disablePadding: false, label: 'Appointment' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  \n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'center' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n    marginLeft: theme.spacing(3.5),\n\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n\n  return (\n    \n    <Toolbar\n      className={clsx(classes.root)}\n    >\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Tradesmen\n        </Typography>\n      \n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      \n    </Toolbar>\n  );\n};\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginTop:theme.spacing(10),\n    marginBottom: theme.spacing(2),\n    opacity:'0.75',\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function ApprovalAppointments() {\n  const classes = useStyles();\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('rating');\n  const [page, setPage] = useState(0);\n  const [dense, setDense] = useState(true);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [rows, setRows] = useState([]);\n\n  const holderData = [];\n\n  const getAllTechniciansData= async () => {\n    await api.getAllTechnicians().then(res => {\n    const techData = res.data.technicians;\n    /* techData.forEach(obj=>{\n    holderData.push(createData(obj.first_name + ' '+ obj.last_name, obj.category.name, obj.ratings, obj.city.city, obj.id))\n    }) */\n    holderData.push(createData('Omar Kabbara', 'Plumber', 4, 'Tripoli', 1))\n    holderData.push(createData('Loay Farhat', 'Plumber', 3, 'Tyre', 10))\n    })\n    \n    setRows(holderData);\n    console.log('rows: ', rows)\n}\n  useEffect(() => {\n    holderData.length = 0\n    if(!rows.length) {\n      getAllTechniciansData();\n    }\n  }, [])\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  let history = useHistory();\n\n  const preventDefault = () => {\n    history.push('/tradesman/schedule')\n  }\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      tabIndex={-1}\n                      key={row.name}\n                     \n                    >\n                      <TableCell padding=\"checkbox\">\n                        \n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"left\">{row.speciality}</TableCell>\n                      <TableCell align=\"center\">\n                        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n                          <Rating name=\"read-only\" value={row.rating} readOnly />\n                        </Box>\n                      </TableCell>\n                      <TableCell align=\"left\">{row.city}</TableCell>\n                      <TableCell align=\"left\"><Link component=\"button\" variant=\"body2\" onClick={() => { \n                        history.push('/' + row.id + '/requestappointment');}}\n                        >\n                          Request\n                        </Link>\n                      \n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}","/home/alijm/FinalProject/frontend/src/components/pages/customers/appointments/schedule.js",["211"],"import  React,{useState,useEffect} from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Scheduler,\n  WeekView,\n  Appointments,\n  AppointmentTooltip,\n  AppointmentForm,\n  Toolbar,\n  DateNavigator,\n  TodayButton,\n} from '@devexpress/dx-react-scheduler-material-ui';\n\nimport appointments from './today-appointments';\nimport { ViewState } from '@devexpress/dx-react-scheduler';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(10),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    opacity: '0.8',\n  },\n  \n}));\n\nexport default function CustomerSchedule() {\n  const classes = useStyles();\n  const [data, setData] = useState([]);\n  const [currentDate, setCurrentDate] = useState('');\n  \n  var today = new Date();\n  var dd = String(today.getDate()).padStart(2, '0');\n  var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n  var yyyy = today.getFullYear();\n\n  today = yyyy + '-' + mm + '-' + dd ;\n\n  var currentDate1 =today;\n\n  \n  \n\n  useEffect(() => {\n    setData(appointments);\n  }, [])\n\n  return (\n    \n    <Paper className={classes.paper}>\n      <Scheduler\n        data={data}\n        height={660}\n      >\n        <ViewState \n        currentDate={currentDate1}\n        onCurrentDateChange={currentDate}\n        />\n        <WeekView\n          startDayHour={9}\n          endDayHour={19}\n        />\n\n        <Toolbar />\n        <DateNavigator />\n        <TodayButton />\n        <Appointments />\n        <AppointmentTooltip\n          showCloseButton\n          showOpenButton\n        />\n        <AppointmentForm\n          readOnly\n        />\n      </Scheduler>\n    </Paper>\n  );\n}\n","/home/alijm/FinalProject/frontend/src/components/pages/customers/appointments/appointments.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/technicians/appointments/today-appointments.js",[],["212","213"],"/home/alijm/FinalProject/frontend/src/components/pages/technicians/appointments/appointments.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/technicians/appointments/schedule.js",["214","215","216"],"import  React,{useState,useEffect} from 'react';\nimport api from '../../../../api';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  Scheduler,\n  WeekView,\n  Appointments,\n  AppointmentTooltip,\n  AppointmentForm,\n  Toolbar,\n  DateNavigator,\n  TodayButton,\n} from '@devexpress/dx-react-scheduler-material-ui';\n\nimport appointments from './appointments';\nimport { ViewState } from '@devexpress/dx-react-scheduler';\n\nconst styles = theme => ({\n  paper: {\n    marginTop: theme.spacing(10),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    opacity: '0.8',\n  },\n  \n});\n\n class Demo extends React.PureComponent {\n    constructor(props) {\n      super(props);\n      \n      var today = new Date();\n      var dd = String(today.getDate()).padStart(2, '0');\n      var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n      var yyyy = today.getFullYear();\n\n      function createData(title, startDate, endDate, id, location) {\n        return { title, startDate, endDate, id, location };\n      }\n\n      const appointments2 = [];\n\n      const getAppointments= async () => {\n\n        const userId =localStorage.getItem('UsersId');\n        try {\n          await api.getCustomerAppointments({\n               userId\n          }).then(res=> {\n            const apptData = res.data.appointments;\n            apptData.forEach(obj=>{\n              var st = obj.startDate.split(/[- :]/);\n              var ed = obj.endDate.split(/[- :]/);\n              var stDate = new Date(st[0], st[1]-1, st[2], st[3], st[4], st[5])\n              var edDate = new Date(ed[0], ed[1]-1, ed[2], ed[3], ed[4], ed[5])\n              appointments2.push(createData(obj.title ,stDate , edDate, obj.id, obj.location))\n              })\n          });\n         }\n         catch {\n          alert('Failed to get appointments');\n         }\n         \n         return(\n          appointments2\n         )\n      }\n\n      today = yyyy + '-' + mm + '-' + dd ;\n\n\n      this.state = {\n        data: appointments(),\n        currentDate: today,\n      };\n      this.currentDateChange = (currentDate) => { this.setState({ currentDate }); };\n    }\n\n    render() {\n      const { data, currentDate } = this.state;\n      console.log('render data: ', data);\n      const { classes } = this.props;\n      \n      return (\n        <Paper className={classes.paper}>\n          <Scheduler\n            \n            data={data}\n            height={660}\n          >\n            <ViewState\n              currentDate={currentDate}\n              onCurrentDateChange={this.currentDateChange}\n            />\n            <WeekView\n              startDayHour={9}\n              endDayHour={19}\n            />\n            <Toolbar />\n            <DateNavigator />\n            <TodayButton />\n            <Appointments />\n            <AppointmentTooltip\n                showCloseButton\n                showOpenButton\n                showDeleteButton\n                \n            />\n            <AppointmentForm\n            />\n          </Scheduler>\n        </Paper>\n      );\n    }\n  }\nexport default withStyles(styles, { withTheme: true })(Demo);\n","/home/alijm/FinalProject/frontend/src/components/pages/customers/appointments/today-appointments.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/home/guestHome.js",["217","218"],"import React, {useState} from \"react\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport Container from '@material-ui/core/Container/Container';\nimport { makeStyles,Button} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    homeContainer: {\n      marginTop: theme.spacing(10),\n      marginLeft: theme.spacing(-5),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    homeMainText: {\n      marginTop: theme.spacing(10),\n      marginRight: theme.spacing(-31),\n      backgroundColor:'clear' ,\n      fontSize:'23px',\n      fontWeight: 'bolder',\n\n    },\n    homeSideText: {\n        marginTop: theme.spacing(2),\n        marginRight: theme.spacing(-34),\n        backgroundColor:'clear' ,\n        fontSize:'16px',\n    },\n    buttons: {\n        marginTop: theme.spacing(2),\n        marginRight: theme.spacing(-30),\n      },\n    registerButton: {\n        fontFamily: \"Open Sans, sans-serif\",\n        fontWeight: 700,\n        size: \"18px\",\n        marginLeft: \"20px\",\n        backgroundColor:'#E0E0E0',\n        textTransform:'none',\n      },\n    allTechniciansButton: {\n        fontFamily: \"Open Sans, sans-serif\",\n        fontWeight: 700,\n        size: \"18px\",\n        marginLeft: \"20px\",\n        backgroundColor:'#E0E0E0',\n        textTransform:'none',\n      },\n  }));\n  \nexport default function GuestHome() {\n    const classes = useStyles();\n    let history = useHistory();\n\n\n    const redirectToRegister = () => {\n        history.push(\"/customer/register\")\n    }\n    \n    const redirectToAllTechnicians = () => {\n        history.push(\"/guest/alltradesmen\")\n    }\n   \nreturn (\n    <Container className={classes.homeContainer}>\n        <p className={classes.homeMainText}>Get a tradesman to your doorstep !</p>\n        <p className={classes.homeSideText}>TradieFind helps you find the right expert for the job <b>hassle-free</b>.</p>\n        <div className={classes.buttons}>\n        <Button \n        className={classes.registerButton}\n        onClick={redirectToRegister}\n        >\n            Join TradieFind Now!\n        </Button>\n        <Button \n        className={classes.allTechniciansButton}\n        onClick={redirectToAllTechnicians}\n        >\n            See all the tradesmen available.\n        </Button>\n\n        </div>\n       \n    </Container>\n)\n    \n};","/home/alijm/FinalProject/frontend/src/components/pages/home/customerHome.js",["219","220"],"import React, {useState} from \"react\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport Container from '@material-ui/core/Container/Container';\nimport { makeStyles,Button} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    homeContainer: {\n      marginTop: theme.spacing(10),\n      marginLeft: theme.spacing(-5),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    homeMainText: {\n      marginTop: theme.spacing(10),\n      marginRight: theme.spacing(-36),\n      backgroundColor:'clear' ,\n      fontSize:'23px',\n      fontWeight: 'bolder',\n\n    },\n    homeSideText: {\n        marginTop: theme.spacing(2),\n        marginRight: theme.spacing(-35.4),\n        backgroundColor:'clear' ,\n        fontSize:'16px',\n    },\n    buttons: {\n        marginTop: theme.spacing(4),\n        marginRight: theme.spacing(-31.4),\n      },\n    registerButton: {\n        fontFamily: \"Open Sans, sans-serif\",\n        fontWeight: 700,\n        size: \"18px\",\n        marginLeft: \"20px\",\n        backgroundColor:'#E0E0E0',\n        textTransform:'none',\n      },\n    allTechniciansButton: {\n        fontFamily: \"Open Sans, sans-serif\",\n        fontWeight: 700,\n        size: \"18px\",\n        marginLeft: \"20px\",\n        backgroundColor:'#E0E0E0',\n        textTransform:'none',\n      },\n  }));\n  \nexport default function CustomerHome() {\n    const classes = useStyles();\n    let history = useHistory();\n\n    const UsersName = localStorage.getItem('UsersName')\n\n    const redirectToCustomerProfile = () => {\n        history.push(\"/customer/profile\")\n    }\n    \n    const redirectToAllTechnicians = () => {\n        history.push(\"/alltradesmen\")\n    }\n   \nreturn (\n    <Container className={classes.homeContainer}>\n        <p className={classes.homeMainText}>Welcome {UsersName}, Get a tradesman to your doorstep !</p>\n        <p className={classes.homeSideText}>TradieFind helps you find the right expert for the job <b>hassle-free</b>.</p>\n        <div className={classes.buttons}>\n        <Button \n        className={classes.registerButton}\n        onClick={redirectToCustomerProfile}\n        >\n            Go To Your Profile !\n        </Button>\n        <Button \n        className={classes.allTechniciansButton}\n        onClick={redirectToAllTechnicians}\n        >\n            See all the tradesmen available.\n        </Button>\n\n        </div>\n       \n    </Container>\n)\n    \n};","/home/alijm/FinalProject/frontend/src/components/pages/home/technicianHome.js",["221","222"],"import React, {useState} from \"react\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport Container from '@material-ui/core/Container/Container';\nimport { makeStyles,Button} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    homeContainer: {\n      marginTop: theme.spacing(10),\n      marginLeft: theme.spacing(-5),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    homeMainText: {\n      marginTop: theme.spacing(7),\n      marginRight: theme.spacing(-36),\n      backgroundColor:'clear' ,\n      fontSize:'23px',\n      fontWeight: 'bolder',\n\n    },\n    homeSideText: {\n        marginTop: theme.spacing(2),\n        marginRight: theme.spacing(-35.4),\n        backgroundColor:'clear' ,\n        fontSize:'16px',\n    },\n    buttons: {\n        marginTop: theme.spacing(4),\n        marginRight: theme.spacing(-31.4),\n      },\n    registerButton: {\n        fontFamily: \"Open Sans, sans-serif\",\n        fontWeight: 700,\n        size: \"18px\",\n        marginLeft: \"20px\",\n        backgroundColor:'#E0E0E0',\n        textTransform:'none',\n      },\n    allTechniciansButton: {\n        fontFamily: \"Open Sans, sans-serif\",\n        fontWeight: 700,\n        size: \"18px\",\n        marginLeft: \"20px\",\n        backgroundColor:'#E0E0E0',\n        textTransform:'none',\n      },\n  }));\n  \nexport default function TechnicianHome() {\n    const classes = useStyles();\n    let history = useHistory();\n\n    const UsersName = localStorage.getItem('UsersName')\n    \n    const redirectToProfile = () => {\n        history.push(\"/tradesman/profile\")\n    }\n    \n    const redirectToTechnicianSchedule = () => {\n        history.push(\"/tradesman/myschedule\")\n    }\n   \nreturn (\n    <Container className={classes.homeContainer}>\n        <p className={classes.homeMainText}>Welcome {UsersName}, Your next job awaits !</p>\n        <p className={classes.homeSideText}>TradieFind helps you find jobs <b>quicker</b> and <b>easier</b>.</p>\n        <div className={classes.buttons}>\n        <Button \n        className={classes.registerButton}\n        onClick={redirectToProfile}\n        >\n            Go To Your Profile !\n        </Button>\n        <Button \n        className={classes.allTechniciansButton}\n        onClick={redirectToTechnicianSchedule}\n        >\n            Check Your Schedule.\n        </Button>\n\n        </div>\n       \n    </Container>\n)\n    \n};","/home/alijm/FinalProject/frontend/src/components/headers/customerHeader/customerHeader.js",["223","224","225","226"],"import React, {useState} from \"react\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport { \n  AppBar, \n  Toolbar, \n  Typography, \n  makeStyles,\n  Button,\n  fade,\n  TextField\n } from '@material-ui/core';\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ChatIcon from '@material-ui/icons/Chat';\nimport HelpIcon from '@material-ui/icons/Help';\nimport CustomerDropDownMenu from './customerDropDownMenu';\nimport NotificationsDropDownMenu from './notifications';\n\n\nconst useStyles = makeStyles(() => ({\n  header: {\n     background: \"none\",\n     paddingRight: \"79px\",\n     paddingLeft: \"118px\",\n  },\n\n  logo: {\n    fontFamily: \"Work Sans, sans-serif\",\n    fontWeight: 600,\n    color: \"black\",\n    textAlign: \"left\",\n  },\n\n  searchContainer: {\n    display: \"flex\",\n    backgroundColor: fade('#00000', 0.15),\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    marginTop: \"-15px\",\n    marginBottom: \"5px\",\n  },\n\n  searchIcon: {\n    alignSelf: \"flex-end\",\n    marginBottom: \"5px\",\n    color:'#000000'\n  },\n\n  searchInput: {\n    width: \"250px\",\n    margin: \"5px\",\n  },\n\n  menuButton: {\n    fontFamily: \"Open Sans, sans-serif\",\n    fontWeight: 700,\n    size: \"18px\",\n  },\n\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n\n  rightSideButtons: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n\n  badge: {\n    position:'absolute',\n    top:'-10px',\n    right: '-10px',\n  padding: '5px 10px',\n  borderRadius: '50%',\n  background: 'black',\n  color: '#000001',\n  }\n\n}));\n\nconst customerHeaderData = [\n  {\n    label: \"All Tradesmen\",\n    href: \"/alltradesmen\",\n  },\n  {\n    label: <HelpIcon ></HelpIcon>,\n    href: \"/help\",\n  },\n  {\n    label: <ChatIcon ></ChatIcon>,\n    href: \"/customer/1/messages\",\n  },\n\n];\n\nexport default function CustomerHeader() {\n  const { header, logo, menuButton, toolbar } = useStyles();\n  const classes = useStyles();\n  const [filter, setFilter] = useState(\"\");\n  const [anchorEl, setAnchorEl] = useState(null);\n  let history = useHistory();\n\n  const handleSearchChange = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const handleSearchKeypress = (e) => {\n    //it triggers by pressing the enter key\n    if (e.key === 'Enter') {\n      history.push(\"/search\");\n    }\n  };\n\n  \n  const displayDesktop = () => {\n    return (\n      <Toolbar className={toolbar}>\n      <Button\n         {...{\n           key: \"logoHome\",\n           color:\"black\",\n           to: \"/\",\n           component: RouterLink,\n           className: logo\n         }} \n       >\n       {TradieFindLogo}\n       {/* <img src=\"TFlogo.png\" alt=\"logo\"  /> */}\n       </Button>\n      \n       <div className={classes.searchContainer}>\n            <SearchIcon className={classes.searchIcon} />\n            <TextField\n              className={classes.searchInput}\n              onKeyPress={handleSearchKeypress}\n              onChange={handleSearchChange}\n              label=\"search for tradesmen here!\"\n              variant=\"standard\"\n            />\n          </div>\n      <div className={classes.rightSideButtons}>   \n        <div>{getMenuButtons()}</div>\n        <NotificationsDropDownMenu />\n        <CustomerDropDownMenu></CustomerDropDownMenu>\n      </div>  \n      </Toolbar>\n    );\n  };\n  \n  const TradieFindLogo = (\n    <Typography variant=\"h6\" component=\"h1\" className={logo}>\n      TradieFind\n    </Typography> \n    );\n\n  const getMenuButtons = () => {\n    return customerHeaderData.map(({label, href}) => {\n      return (\n        <Button\n          {...{\n            key: label,\n            color:\"black\",\n            to: href,\n            component: RouterLink,\n            className: menuButton\n          }} \n        >\n        {label}\n        </Button>\n      );\n    });\n  };\n\n  return (\n    <header>\n      <AppBar className={header} elevation={0}>\n        {displayDesktop()}\n      </AppBar>\n    </header>\n  );\n}\n\n        {/* <div>\n          <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n            <AccountCircleIcon></AccountCircleIcon>\n          </Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <MenuItem onClick={handleProfile}>My Profile</MenuItem>\n            <MenuItem onClick={handleAppointments}>My Appointments</MenuItem>\n            <MenuItem onClick={handleLogout}>Logout</MenuItem>\n          </Menu>\n        </div>  */}","/home/alijm/FinalProject/frontend/src/components/headers/guestHeader/guestHeader.js",["227"],"import React, {useState} from \"react\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport { \n  AppBar, \n  Toolbar, \n  Typography, \n  makeStyles,\n  Button,\n  fade,\n  TextField,\n } from '@material-ui/core';\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport HelpIcon from '@material-ui/icons/Help';\nimport GuestDropDownMenu from './guestDropDownMenu';\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n     \n     background: 'none',\n     paddingRight: \"79px\",\n     paddingLeft: \"118px\",\n  },\n\n  logo: {\n    fontFamily: \"Work Sans, sans-serif\",\n    fontWeight: 600,\n    color: \"black\",\n    textAlign: \"left\",\n  },\n\n  searchContainer: {\n    display: \"flex\",\n    backgroundColor: fade('#00000', 0.15),\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    marginTop: \"-15px\",\n    marginBottom: \"5px\",\n  },\n  searchIcon: {\n    alignSelf: \"flex-end\",\n    marginBottom: \"5px\",\n    color:'#000000'\n  },\n  searchInput: {\n    width: \"250px\",\n    margin: \"5px\",\n  },\n\n /*  logo: {\n    maxWidth: 200,\n  }, */\n\n  menuButton: {\n    fontFamily: \"Open Sans, sans-serif\",\n    fontWeight: 700,\n    size: \"18px\",\n    marginLeft: \"20px\",\n  },\n\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n\n  rightSideButtons: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n\n}));\n\nconst guestHeaderData = [\n  \n  {\n    label: \"All Tradesmen\",\n    href: \"/guest/alltradesmen\",\n  },\n  {\n    label: <HelpIcon ></HelpIcon>,\n    href: \"/help\",\n  },\n  {\n    label: \"Log In\",\n    href: \"/login\",\n  },\n];\n\nexport default function GuestHeader() {\n  const { header, logo, menuButton, toolbar } = useStyles();\n  const classes = useStyles();\n  const [filter, setFilter] = useState(\"\");\n\n  let history = useHistory();\n\n  const handleSearchChange = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const handleSearchKeypress = (e) => {\n    //it triggers by pressing the enter key\n\n    if (e.key === 'Enter') {\n      history.push(\"/search\");\n    }\n  };\n\n\n  const displayDesktop = () => {\n    return (\n       <Toolbar className={toolbar}>\n       <Button\n          {...{\n            key: \"logoHome\",\n            color:\"black\",\n            to: \"/\",\n            component: RouterLink,\n            className: logo\n          }} \n        >\n        {TradieFindLogo}\n        {/* <img src=\"TFlogo.png\" alt=\"logo\"  /> */}\n        </Button>\n       \n        <div className={classes.searchContainer}>\n            <SearchIcon className={classes.searchIcon} />\n            <TextField\n              className={classes.searchInput}\n              onKeyPress={handleSearchKeypress}\n              onChange={handleSearchChange}\n              label=\"search for tradesmen here!\"\n              variant=\"standard\"\n            />\n          </div>\n       <div className={classes.rightSideButtons}>\n        <div>{getMenuButtons()}</div>\n        <div className={classes.menuButton}>\n          <GuestDropDownMenu></GuestDropDownMenu>\n        </div>\n      </div>\n       </Toolbar>\n    );\n  };\n  \n  const TradieFindLogo = (\n    <Typography variant=\"h6\" component=\"h1\" className={logo}>\n      TradieFind\n    </Typography> \n    );\n\n  const getMenuButtons = () => {\n    return guestHeaderData.map(({label, href}) => {\n      return (\n        <Button\n          {...{\n            key: label,\n            color:\"black\",\n            to: href,\n            component: RouterLink,\n            className: menuButton\n          }} \n        >\n        {label}\n        </Button>\n      );\n    });\n    \n  };\n  \n        \n  \n\n  return (\n    <header>\n      <AppBar className={header} elevation={0}>\n        {displayDesktop()}\n      </AppBar>\n    </header>\n  );\n}\n\n","/home/alijm/FinalProject/frontend/src/components/headers/technicianHeader/technicianHeader.js",["228","229","230","231"],"import React, {useState} from \"react\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport api from '../../../api';\nimport { \n  AppBar, \n  Toolbar, \n  Typography, \n  makeStyles,\n  Button,\n  fade,\n  TextField,\n } from '@material-ui/core';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ChatIcon from '@material-ui/icons/Chat';\nimport HelpIcon from '@material-ui/icons/Help';\nimport TechnicianDropDownMenu from './technicianDropDownMenu';\nimport NotificationsDropDownMenu from './notifications';\n\n\nconst useStyles = makeStyles(() => ({\n  header: {\n     background: \"none\",\n     paddingRight: \"79px\",\n     paddingLeft: \"118px\",\n  },\n\n  logo: {\n    fontFamily: \"Work Sans, sans-serif\",\n    fontWeight: 600,\n    color: \"black\",\n    textAlign: \"left\",\n  },\n\n  searchContainer: {\n    display: \"flex\",\n    backgroundColor: fade('#00000', 0.15),\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    marginTop: \"-15px\",\n    marginBottom: \"5px\",\n  },\n\n  searchIcon: {\n    alignSelf: \"flex-end\",\n    marginBottom: \"5px\",\n    color:'#000000'\n  },\n\n  searchInput: {\n    width: \"250px\",\n    margin: \"5px\",\n  },\n\n  menuButton: {\n    fontFamily: \"Open Sans, sans-serif\",\n    fontWeight: 700,\n    size: \"18px\",\n  },\n\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n\n  rightSideButtons: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n  },\n\n}));\n\nconst customerHeaderData = [\n  {\n    label: \"All Tradesmen\",\n    href: \"/alltradesmen\",\n  },\n  {\n    label: <HelpIcon ></HelpIcon>,\n    href: \"/help\",\n  },\n  {\n    label: <ChatIcon ></ChatIcon>,\n    href: \"/customer/chat\",\n  },\n];\n\nexport default function TechnicianHeader() {\n  const { header, logo, menuButton, toolbar } = useStyles();\n  const classes = useStyles();\n  const [filter, setFilter] = useState(\"\");\n  let history = useHistory();\n\n  const handleSearchChange = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const handleSearchKeypress = (e) => {\n    //it triggers by pressing the enter key\n    if (e.key === 'Enter') {\n      history.push(\"/search\");\n    }\n  };\n\n  const displayDesktop = () => {\n    return (\n      <Toolbar className={toolbar}>\n      <Button\n         {...{\n           key: \"logoHome\",\n           color:\"black\",\n           to: \"/\",\n           component: RouterLink,\n           className: logo\n         }} \n       >\n       {TechieFindLogo}\n       {/* <img src=\"TFlogo.png\" alt=\"logo\"  /> */}\n       </Button>\n      \n       <div className={classes.searchContainer}>\n            <SearchIcon className={classes.searchIcon} />\n            <TextField\n              className={classes.searchInput}\n              onKeyPress={handleSearchKeypress}\n              onChange={handleSearchChange}\n              label=\"search for tradesmen here!\"\n              variant=\"standard\"\n            />\n          </div>\n      <div className={classes.rightSideButtons}>   \n        <div>{getMenuButtons()}</div>\n        <NotificationsDropDownMenu />\n        <TechnicianDropDownMenu></TechnicianDropDownMenu> \n      </div>  \n      </Toolbar>\n    );\n  };\n  \n  const TechieFindLogo = (\n    <Typography variant=\"h6\" component=\"h1\" className={logo}>\n      TradieFind\n    </Typography> \n    );\n\n  const getMenuButtons = () => {\n    return customerHeaderData.map(({label, href}) => {\n      return (\n        <Button\n          {...{\n            key: label,\n            color:\"black\",\n            to: href,\n            component: RouterLink,\n            className: menuButton\n          }} \n        >\n        {label}\n        </Button>\n      );\n    });\n  };\n\n  return (\n    <header>\n      <AppBar className={header} elevation={0}>\n        {displayDesktop()}\n      </AppBar>\n    </header>\n  );\n}\n\n \n","/home/alijm/FinalProject/frontend/src/components/headers/customerHeader/customerDropDownMenu.js",["232"],"import React from 'react';\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport api from '../../../api';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function CustomerDropDownMenu() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  let history = useHistory();\n\n  const handleProfile = () => {\n    history.push(\"/customer/profile\")\n    handleToggle()\n  }\n\n  const handleAppointments = (event) => {\n    history.push(\"/customer/myappointments\")\n    handleToggle()\n  }\n\n  const handleRatings = (event) => {\n    history.push(\"/customer/completedappointments\")\n    handleToggle()\n  }\n\n  const handleLogout = () => {\n    api.logout().then(res => {\n      console.log(\"res: \",res);\n      \n      localStorage.removeItem('CustomerAccessToken');\n      localStorage.removeItem('UsersName');\n              \n      history.push(\"/\");\n      window.location.reload();\n      alert(res.data.message) ;\n    });\n  }\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <Button\n          ref={anchorRef}\n          aria-controls={open ? 'menu-list-grow' : undefined}\n          aria-haspopup=\"true\"\n          onClick={handleToggle}\n        >\n            <AccountCircleIcon></AccountCircleIcon>\n        </Button>\n        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                    <MenuItem onClick={handleProfile}>My Profile</MenuItem>\n                    <MenuItem onClick={handleAppointments}>My Appointments</MenuItem>\n                    <MenuItem onClick={handleRatings}>Completed Appointments</MenuItem>\n                    <MenuItem onClick={handleLogout}>Logout</MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </div>\n    </div>\n  );\n}","/home/alijm/FinalProject/frontend/src/components/headers/guestHeader/guestDropDownMenu.js",["233"],"import React, {useState, useRef} from 'react';\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  menuButton: {\n    fontFamily: \"Open Sans, sans-serif\",\n    fontWeight: 700,\n    size: \"18px\",\n    marginLeft: \"20px\",\n\n  },\n}));\n\n \nexport default function GuestDropDownMenu() {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const anchorRef = useRef(null);\n\n  let history = useHistory();\n\n\n\n  const handleCustomerRegister = () => {\n    history.push(\"/customer/register\")\n    handleToggle()\n  }\n\n  const handleTechnicianRegister = () => {\n    history.push(\"/tradesman/register\")\n    handleToggle()\n  }\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <Button\n          ref={anchorRef}\n          aria-controls={open ? 'menu-list-grow' : undefined}\n          aria-haspopup=\"true\"\n          className={classes.menuButton}\n          onClick={handleToggle}\n        >\n            Register\n        </Button>\n        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                    <MenuItem onClick={handleCustomerRegister}>As A Customer</MenuItem>\n                    <MenuItem onClick={handleTechnicianRegister}>As A Tradesman</MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </div>\n    </div>\n  );\n}","/home/alijm/FinalProject/frontend/src/components/headers/technicianHeader/technicianDropDownMenu.js",["234"],"import React from 'react';\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport api from '../../../api';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function TechnicianDropDownMenu() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  let history = useHistory();\n\n  const handleProfile = () => {\n    history.push(\"/tradesman/profile\")\n    handleToggle()\n  }\n\n  const handleAppointments = (event) => {\n    history.push(\"/tradesman/myschedule\")\n    handleToggle()\n  }\n\n  const approveAppointments = (event) => {\n    history.push(\"/tradesman/tentativeappointments\")\n    handleToggle()\n  }\n\n  const handleLogout = () => {\n    api.logout().then(res => {\n      console.log(\"res: \",res);\n      \n      localStorage.removeItem('TechnicianAccessToken');\n      localStorage.removeItem('UsersName');\n              \n      history.push(\"/\");\n      window.location.reload();\n      alert(res.data.message) ;\n    });\n  }\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <Button\n          ref={anchorRef}\n          aria-controls={open ? 'menu-list-grow' : undefined}\n          aria-haspopup=\"true\"\n          onClick={handleToggle}\n        >\n            <AccountCircleIcon></AccountCircleIcon>\n        </Button>\n        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                    <MenuItem onClick={handleProfile}>My Profile</MenuItem>\n                    <MenuItem onClick={handleAppointments}>Schedule Management</MenuItem>\n                    <MenuItem onClick={approveAppointments}>Approve Appointments</MenuItem>\n                    <MenuItem onClick={handleLogout}>Logout</MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </div>\n    </div>\n  );\n}",["235","236"],"/home/alijm/FinalProject/frontend/src/components/pages/technicians/register/register.js",["237","238"],"import React, {useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport api from '../../../../api';\nimport AsynchronousSearchCities from '../../customers/register/citySelect';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport AsynchronousSearchCategories from './categorySelect';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"/\">\n        TradieFind\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(10),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function TechnicianRegister() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [categoryId, setCategoryId] = useState('');\n  const [cityId, setCityId] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n\n\n  const handleCategoryChange = (event,value) => {\n    let newCategoryId =  value.id;\n    setCategoryId(newCategoryId);\n    console.log('child Category Id: ', newCategoryId);\n  }\n\n  const handleCityChange = (event,value) => {\n    let newCityId =  value.id;\n    setCityId(newCityId);\n    console.log('child City Id: ', newCityId);\n  }\n\n  const handleSubmit = async () => {\n    setSubmitting(true);\n    try {\n     await api.technicianRegister({\n         firstName, lastName, cityId, categoryId, email, password, confirmPassword\n     });\n     history.push('/')\n    }\n    catch {\n     alert('Failed to Register');\n    } \n    finally {\n     setSubmitting(false);\n    }\n    setTimeout(() => {\n      setSubmitting(false);\n    }, 3000)\n    };\n  /* const handleSubmit = async () => {\n    setSubmitting(true);\n    try {\n     await api.register({\n         firstName, lastName, cityId, email, password, confirmPassword\n     });\n     history.push('/')\n    }\n    catch {\n     alert('Failed to Register');\n    } \n    finally {\n     setSubmitting(false);\n    }\n    setTimeout(() => {\n      setSubmitting(false);\n    }, 3000)\n    }; */\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                value={firstName}\n                onChange={e => setFirstName(e.target.value)}\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                value={lastName}\n                onChange={e => setLastName(e.target.value)}\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                name=\"password\"\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                name=\"confirmPassword\"\n                value={confirmPassword}\n                onChange={e => setConfirmPassword(e.target.value)}\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"confirmPassword\"\n                autoComplete=\"current-confirm-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n            <AsynchronousSearchCategories handleChange={handleCategoryChange} ></AsynchronousSearchCategories>\n            </Grid>\n            <Grid item xs={12}>\n            <AsynchronousSearchCities handleChange={handleCityChange} ></AsynchronousSearchCities>\n            </Grid>\n            {/* <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid> */}\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"inherit\"\n            onClick={handleSubmit}\n            className={classes.submit}\n            disabled={submitting}>\n            {submitting? 'Registering...' : 'Register'}\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"http://localhost:3000/login\" variant=\"body2\">\n                Already have an account? Log in !\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","/home/alijm/FinalProject/frontend/src/components/pages/technicians/register/categorySelect.js",[],"/home/alijm/FinalProject/frontend/src/components/headers/customerHeader/notifications.js",["239","240","241","242"],"import React, { useState } from 'react';\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Badge from '@material-ui/core/Badge';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Echo from 'laravel-echo';\nimport Pusher from 'pusher-js';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function NotificationsDropDownMenu() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [notifications, setNotifications] = useState([]);\n  const [notificationsLength, setNotificationsLength] = useState(0);\n\n  const holderNotif = [];\n\n  const options = {\n    broadcaster: \"pusher\",\n    key: \"9d2040fd9f3ee80d3e21\",\n    cluster: \"eu\",\n    forceTLS: true,\n  \n  };\n  const echo = new Echo(options);\n  echo.channel('appointment-approved').listen('AppointmentApproved', (e) => {\n    console.log('notif: ',e.message);\n    holderNotif.push(e.message);\n    setNotifications(holderNotif);\n    setNotificationsLength(holderNotif.length);\n  })\n\n  let history = useHistory();\n\n  const handleProfile = () => {\n    history.push(\"/customer/profile\")\n    handleToggle()\n  }\n\n  const handleAppointments = (event) => {\n    history.push(\"/customer/myappointments\")\n    handleToggle()\n  }\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <Button\n          ref={anchorRef}\n          aria-controls={open ? 'menu-list-grow' : undefined}\n          aria-haspopup=\"true\"\n          onClick={handleToggle}\n        >   <Badge badgeContent={notificationsLength} color=\"primary\">\n                <NotificationsIcon />\n            </Badge>\n        </Button>\n        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                  {notifications.map((item) => {\n                    return (\n                      <MenuItem>{item} </MenuItem>\n                    )\n                  })}\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </div>\n    </div>\n  );\n}","/home/alijm/FinalProject/frontend/src/components/pages/customers/search/ratings.js",["243","244","245"],"import React from 'react';\nimport Rating from '@material-ui/lab/Rating';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nexport default function SimpleRating() {\n  const [value, setValue] = React.useState(5);\n\n  return (\n    <div>\n      <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n        <Rating name=\"read-only\"  readOnly />\n      </Box>\n    </div>\n  );\n}",["246","247"],"/home/alijm/FinalProject/frontend/src/components/pages/customers/appointments/schedule2.js",["248","249","250"],"import  React,{useState,useEffect} from 'react';\nimport api from '../../../../api';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  Scheduler,\n  WeekView,\n  Appointments,\n  AppointmentTooltip,\n  AppointmentForm,\n  Toolbar,\n  DateNavigator,\n  TodayButton,\n} from '@devexpress/dx-react-scheduler-material-ui';\n\nimport appointments from './appointments';\nimport { ViewState } from '@devexpress/dx-react-scheduler';\n\nconst styles = theme => ({\n  paper: {\n    marginTop: theme.spacing(10),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    opacity: '0.8',\n  },\n  \n});\n\n class Demo extends React.PureComponent {\n    constructor(props) {\n      super(props);\n      \n      var today = new Date();\n      var dd = String(today.getDate()).padStart(2, '0');\n      var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n      var yyyy = today.getFullYear();\n\n      function createData(title, startDate, endDate, id, location) {\n        return { title, startDate, endDate, id, location };\n      }\n\n      const appointments2 = [];\n\n      const getAppointments= async () => {\n\n        const userId =localStorage.getItem('UsersId');\n        try {\n          await api.getCustomerAppointments({\n               userId\n          }).then(res=> {\n            const apptData = res.data.appointments;\n            apptData.forEach(obj=>{\n              var st = obj.startDate.split(/[- :]/);\n              var ed = obj.endDate.split(/[- :]/);\n              var stDate = new Date(st[0], st[1]-1, st[2], st[3], st[4], st[5])\n              var edDate = new Date(ed[0], ed[1]-1, ed[2], ed[3], ed[4], ed[5])\n              appointments2.push(createData(obj.title ,stDate , edDate, obj.id, obj.location))\n              })\n          });\n         }\n         catch {\n          alert('Failed to get appointments');\n         }\n         \n         return(\n          appointments2\n         )\n      }\n\n      today = yyyy + '-' + mm + '-' + dd ;\n\n\n      this.state = {\n        data: appointments(),\n        currentDate: today,\n      };\n      this.currentDateChange = (currentDate) => { this.setState({ currentDate }); };\n    }\n\n    render() {\n      const { data, currentDate } = this.state;\n      console.log('render data: ', data);\n      const { classes } = this.props;\n      \n      return (\n        <Paper className={classes.paper}>\n          <Scheduler\n            \n            data={data}\n            height={660}\n          >\n            <ViewState\n              currentDate={currentDate}\n              onCurrentDateChange={this.currentDateChange}\n            />\n            <WeekView\n              startDayHour={9}\n              endDayHour={19}\n            />\n            <Toolbar />\n            <DateNavigator />\n            <TodayButton />\n            <Appointments />\n            <AppointmentTooltip\n                showCloseButton\n                showOpenButton\n                showDeleteButton\n            />\n            <AppointmentForm\n            />\n          </Scheduler>\n        </Paper>\n      );\n    }\n  }\nexport default withStyles(styles, { withTheme: true })(Demo);\n","/home/alijm/FinalProject/frontend/src/components/pages/customers/search/requestAppointment.js",["251","252","253"],"import React, {useState, useEffect} from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\nimport api from '../../../../api';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"/\">\n        TechieFind\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(10),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function TechnicianRegister() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [title, setTitle] = useState('');\n  const [location, setLocation] = useState('');\n  const [date, setDate] = useState('');\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [techId, setTechId] = useState(0);\n  const id = useParams();\n  \n\n  const handleSubmit = async () => {\n    setSubmitting(true);\n    const startDate = date + ' ' + startTime;\n    const endDate = date + ' ' + endTime;\n    const approved = 0;\n    ;\n    \n\n    console.log('startDate: ', startDate);\n    console.log('endDate: ', endDate);\n    console.log('location: ', location);\n    console.log('userId: ', userId);\n    console.log('techId: ', techId);\n    console.log('approved: ', approved);\n\n    try {\n     await api.requestAppointment({\n          title, startDate, endDate, location, userId, techId, approved\n     });\n     history.push('/')\n    }\n    catch {\n     alert('Failed to Submit Appointment Request');\n    } \n    finally {\n     setSubmitting(false);\n    }\n    setTimeout(() => {\n      setSubmitting(false);\n    }, 3000)\n    };\n    useEffect(() => {\n      \n      setUserId(localStorage.getItem('UsersId'));\n      setTechId(id.id)\n      \n    }, []);\n    \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Request An Appointment\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                name=\"title\"\n                value={title}\n                onChange={e => setTitle(e.target.value)}\n                label=\"Description\"\n                type=\"string\"\n                id=\"title\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                name=\"location\"\n                value={location}\n                onChange={e => setLocation(e.target.value)}\n                label=\"Location\"\n                type=\"string\"\n                id=\"location\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                id=\"appointmentDate\"\n                label=\"Appointment Date \"\n                type=\"date\"\n                value={date}\n                onChange={e => setDate(e.target.value)}\n                className={classes.textField}\n                InputLabelProps={{\n                shrink: true,\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                type=\"time\"\n                size='small'\n                label=\"Starts At\"\n                min='09:00'\n                max='19:00'\n                value={startTime}\n                onChange={e => setStartTime(e.target.value)}\n                required\n                fullWidth\n                id=\"startAppointment\"\n                autoFocus\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                inputProps={{\n                    step: 300, // 5 min\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                size='small'\n                required\n                fullWidth\n                type=\"time\"\n                min='09:00'\n                max='19:00'\n                value={endTime}\n                onChange={e => setEndTime(e.target.value)}\n                label=\"Ends At \"\n                id=\"endAppointment\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                inputProps={{\n                    step: 300, // 5 min\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"inherit\"\n            onClick={handleSubmit}\n            className={classes.submit}\n            disabled={submitting}>\n            {submitting? 'submitting appointment request...' : 'submit'}\n          </Button>\n         \n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","/home/alijm/FinalProject/frontend/src/components/pages/technicians/appointments/approvalAppointments.js",["254","255"],"import React, {useEffect,useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport api from '../../../../api';\nimport Button from '@material-ui/core/Button';\n\n\n\n\nfunction createData(id, name, description, location, startDate, endDate, approved) {\n  return { id, name, description, location, startDate, endDate, approved };\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: \"Name\" },\n  { id: 'description', numeric: false, disablePadding: false, label: 'Description' },\n  { id: 'location', numeric: false, disablePadding: false, label: 'Location' },\n  { id: 'startDate', numeric: true, disablePadding: false, label: 'Start Date' },\n  { id: 'endDate', numeric: true, disablePadding: false, label: 'End Date' },\n  { id: 'Approve', numeric: true, disablePadding: false, label: 'Approve Appointment' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  \n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'center' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n    marginLeft: theme.spacing(3.5),\n\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n\n  return (\n    \n    <Toolbar\n      className={clsx(classes.root)}\n    >\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Appointments Pending Approval\n        </Typography>\n      \n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      \n    </Toolbar>\n  );\n};\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginTop:theme.spacing(10),\n    marginBottom: theme.spacing(2),\n    opacity:'0.75',\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function AllTechniciansTable() {\n  const classes = useStyles();\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('rating');\n  const [page, setPage] = useState(0);\n  const [dense, setDense] = useState(false);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [loading, setLoading] = useState(false);\n  const [rows,setRows] = useState([]);\n  const [approveText, setApproveText] = useState('Approve');\n\n  const holderData = [];\n\n  const getUnapprovedAppointments= async () => {\n\n    const techId =localStorage.getItem('UsersId');\n\n    try {\n        await api.getTechnicianAppointments({\n            techId\n        }).then(res => {\n            const techApptData = res.data.appointments;\n            techApptData.forEach(obj=>{\n              if (obj.approved === 0)\n              {\n              holderData.push(createData(obj.id, obj.user.first_name + ' ' + obj.user.last_name, obj.title, obj.location, obj.startDate, obj.endDate, obj.approved))\n            }})\n        })\n        setRows(holderData);\n\n    }\n    catch {\n        alert('Failed to get appointments');\n       }\n    console.log('rows: ', rows)\n}\n  const handleApproveAppointment = async (id) => {\n    setLoading(true);\n    try {\n      setApproveText('Approving');\n      await api.approveAppointment({id})\n      .then(res=> {\n        if (!res.data.appointment.id) {\n          alert('no appointment found!')\n          console.log('app. data: ', res.data)\n        }\n        else {\n          console.log(\"appt. data: \", res.data)\n        }\n    });\n    }\n    catch {\n      alert('Failed to Approve');\n    } \n    finally {\n      setLoading(true);\n      setApproveText('Approved');\n    }\n  };\n\n  useEffect(() => {\n    if(!rows.length) {\n      getUnapprovedAppointments();\n    }\n  }, [])\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  let history = useHistory();\n\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      tabIndex={-1}\n                      key={row.id}\n                     \n                    >\n                      <TableCell padding=\"checkbox\">\n                        \n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"left\">{row.description}</TableCell>\n                      <TableCell align=\"left\">{row.location}</TableCell>\n                      <TableCell align=\"center\">{row.startDate}</TableCell>\n                      <TableCell align=\"center\">{row.endDate}</TableCell>\n                      <TableCell align=\"center\">\n                        <Button\n                          type=\"submit\"\n                          fullWidth\n                          variant=\"contained\"\n                          color=\"inherit\"\n                          value={row.id}\n                          className={classes.submit}\n                          onClick={e => handleApproveAppointment(e.target.value)}\n                          disabled={loading}>\n                          {approveText} \n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}","/home/alijm/FinalProject/frontend/src/components/headers/guestHeader/allTechnicians.js",["256","257","258"],"import React, {useEffect,useState} from 'react';\nimport {useHistory, Redirect} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport api from '../../../api';\nimport Link from '@material-ui/core/Link';\nimport Rating from '@material-ui/lab/Rating';\nimport Box from '@material-ui/core/Box';\n\n\n\nfunction createData(name, speciality, rating, city, id) {\n  return { name, speciality, rating, city, id };\n}\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: \"Name\" },\n  { id: 'speciality', numeric: false, disablePadding: false, label: 'Speciality' },\n  { id: 'rating', numeric: true, disablePadding: false, label: 'Rating' },\n  { id: 'city', numeric: false, disablePadding: false, label: 'City' },\n  { id: 'Appointment', numeric: false, disablePadding: false, label: 'Appointment' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  \n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'center' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n    marginLeft: theme.spacing(3.5),\n\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n\n  return (\n    \n    <Toolbar\n      className={clsx(classes.root)}\n    >\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Tradesmen\n        </Typography>\n      \n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      \n    </Toolbar>\n  );\n};\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginTop:theme.spacing(10),\n    marginBottom: theme.spacing(2),\n    opacity:'0.75',\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function GuestAllTechnicians() {\n  const classes = useStyles();\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('rating');\n  const [page, setPage] = useState(0);\n  const [dense, setDense] = useState(true);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [rows, setRows] = useState([]);\n\n  const holderData = [];\n\nconst getAllTechniciansData= async () => {\n    await api.getAllTechnicians().then(res => {\n    const techData = res.data.technicians;\n    techData.forEach(obj=>{\n    holderData.push(createData(obj.first_name + ' '+ obj.last_name, obj.category.name, obj.ratings, obj.city.city, obj.id))\n    })\n    })\n    setRows(holderData);\n    console.log('rows: ', rows)\n}\n  useEffect(() => {\n    if(!rows.length) {\n      getAllTechniciansData();\n    }\n  }, [])\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  let history = useHistory();\n\n  const preventDefault = () => {\n    history.push('/tradesman/schedule')\n  }\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      tabIndex={-1}\n                      key={row.id}\n                     \n                    >\n                      <TableCell padding=\"checkbox\">\n                        \n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"left\">{row.speciality}</TableCell>\n                      <TableCell align=\"center\">\n                        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n                          <Rating name=\"read-only\" value={row.rating} readOnly />\n                        </Box>\n                      </TableCell>\n                      <TableCell align=\"left\">{row.city}</TableCell>\n                      <TableCell align=\"left\"><Link component=\"button\" variant=\"body2\" onClick={() => { \n                        if (localStorage.getItem('CustomerAccessToken'))  {\n                          history.push('/' + row.id + '/requestappointment');\n                          } else {\n                            history.push('/login');\n                          }\n                          \n                        }}\n                        >\n                          Request\n                        </Link>\n                        </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}","/home/alijm/FinalProject/frontend/src/components/headers/technicianHeader/notifications.js",["259","260","261","262"],"import React, { useState } from 'react';\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Badge from '@material-ui/core/Badge';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Echo from 'laravel-echo';\nimport Pusher from 'pusher-js';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function NotificationsDropDownMenu() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [notifications, setNotifications] = useState([]);\n  const [notificationsLength, setNotificationsLength] = useState(0);\n  \n  const holderNotif = [];\n  \n  const options = {\n    broadcaster: \"pusher\",\n    key: \"9d2040fd9f3ee80d3e21\",\n    cluster: \"eu\",\n    forceTLS: true,\n  \n  };\n  const echo = new Echo(options);\n  \n  echo.channel('appointment-requested').listen('AppointmentRequested', (e) => {\n    console.log('notif: ',e.message);\n    holderNotif.push(e.message);\n    setNotifications(holderNotif);\n    setNotificationsLength(holderNotif.length);  })\n  let history = useHistory();\n\n  const handleProfile = () => {\n    history.push(\"/customer/profile\")\n    handleToggle()\n  }\n\n  const handleAppointments = (event) => {\n    history.push(\"/customer/myappointments\")\n    handleToggle()\n  }\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <Button\n          ref={anchorRef}\n          aria-controls={open ? 'menu-list-grow' : undefined}\n          aria-haspopup=\"true\"\n          onClick={handleToggle}\n        >   <Badge badgeContent={notificationsLength} color=\"primary\">\n                <NotificationsIcon />\n            </Badge>\n        </Button>\n        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                  {notifications.map((item) => {\n                    return (\n                      <MenuItem>{item}</MenuItem>\n                    )\n                  })}\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </div>\n    </div>\n  );\n}","/home/alijm/FinalProject/frontend/src/components/pages/customers/profile/profile.js",["263","264","265","266","267","268","269"],"import React from 'react';\nimport cx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport { useFadedShadowStyles } from '@mui-treasury/styles/shadow/faded';\nimport { useGutterBorderedGridStyles } from '@mui-treasury/styles/grid/gutterBordered';\nimport api from '../../../../api';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    marginTop: theme.spacing(10),\n    marginRight: theme.spacing(14)\n  } ,\n  card: {\n    borderRadius: 12,\n    minWidth: 256,\n    backgroundColor: 'transparent',\n    /* textAlign: 'left', */\n  },\n  avatar: {\n    width: 90,\n    height: 90,\n    margin: 'left',\n  },\n  heading: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    letterSpacing: '0.5px',\n    marginTop: 8,\n    marginBottom: 0,\n    margin:'left',\n  },\n  subheader: {\n    fontSize: 14,\n    color: \"grey\",\n    marginBottom: '0.875em',\n  },\n  descriptionSubheader: {\n    fontSize: 14,\n    color: \"grey\",\n    marginBottom: '0.875em',\n    textAlign: 'center',\n  },\n  description: {\n    fontSize: 14,\n    color: \"grey\",\n    marginBottom: '0.875em',\n    textAlign:'center',\n  },\n  statLabel: {\n    fontSize: 12,\n    color: \"grey\",\n    fontWeight: 500,\n    fontFamily:\n      '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n    margin: 0,\n  },\n  statValue: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 4,\n    letterSpacing: '1px',\n  },\n}));\n\nexport const CustomerProfile = React.memo(function ProfileCard() {\n  const styles = useStyles();\n  const shadowStyles = useFadedShadowStyles();\n  const [id, setId] = React.useState('');\n  const [name, setName] = React.useState('');\n  const [city, setCity] = React.useState(''); \n  const [residence, setResidence] = React.useState('');\n  const borderedGridStyles = useGutterBorderedGridStyles({\n    borderColor: 'rgba(0, 0, 0, 0.08)',\n    height: '50%',\n  });\n\n  /* setId(localStorage.getItem('UsersId')); */\n  const handleCustomerInfo = async (id) => {\n  \n    try {\n      await api.getCustomerProfile({id})\n      .then(res=> {\n        if (!res.data.userInfo.id) {\n          alert('no user info found!')\n          console.log('app. data: ', res.data)\n        }\n        else {\n          console.log(\"appt. data: \", res.data)\n          setName(res.data.userInfo.first_name + ' ', res.data.userInfo.last_name);\n          setCity(res.data.userInfo.city_id);\n        }\n    });\n    }\n    catch {\n      alert('Failed to Approve');\n    } \n    finally {\n    }\n  };\n\n  /* handleCustomerInfo(id) */\n  return (\n    <Container className={styles.container}>\n    <Card className={cx(styles.card, shadowStyles.root)}>\n      <CardContent>\n      <Box display={'flex'}>\n        <Box p={2} flex={'auto'} className={borderedGridStyles.item}>\n        <Avatar className={styles.avatar} src={'/assets/aliMakkawi.jpg'} />\n        <h3 className={styles.heading}>Ali Makkawi</h3>\n        </Box>\n        <Box p={2} flex={'auto'} className={borderedGridStyles.item}>\n        <h3 className={styles.descriptionSubheader}>Residence</h3>\n        <p className={styles.description}> Maarad Street, behind Max , Monalisa Bldg.</p>\n        </Box>\n      </Box>\n      </CardContent>\n      <Divider light />\n      <Box display={'flex'}>\n        <Box p={2} flex={'auto'} className={borderedGridStyles.item}>\n          <p className={styles.statLabel}>City</p>\n          <p className={styles.statValue}>Tripoli</p>\n        </Box>\n      </Box>\n    </Card>\n    </Container>\n  );\n});\n\nexport default CustomerProfile","/home/alijm/FinalProject/frontend/src/components/pages/technicians/profiles/profile.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/customers/appointments/completedAppointments.js",["270","271","272","273","274","275","276","277","278","279","280","281","282","283"],"import React, {useState, useEffect} from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\nimport api from '../../../../api';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Switch from '@material-ui/core/Switch';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Rating from '@material-ui/lab/Rating';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\n\n\n\n\nfunction createData(id, name, description, location, startDate, endDate) {\n  return { id, name, description, location, startDate, endDate };\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: \"Name\" },\n  { id: 'description', numeric: false, disablePadding: false, label: 'Description' },\n  { id: 'location', numeric: false, disablePadding: false, label: 'Location' },\n  { id: 'startDate', numeric: true, disablePadding: false, label: 'Start Date' },\n  { id: 'endDate', numeric: true, disablePadding: false, label: 'End Date' },\n  { id: 'rateExperience', numeric: true, disablePadding: false, label: 'Rate Your Experience' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  \n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'center' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n    marginLeft: theme.spacing(3.5),\n\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n\n  return (\n    \n    <Toolbar\n      className={clsx(classes.root)}\n    >\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Completed Appointments\n        </Typography>\n      \n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      \n    </Toolbar>\n  );\n};\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginTop:theme.spacing(10),\n    marginBottom: theme.spacing(2),\n    opacity:'0.75',\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function CompletedAppointments() {\n  const classes = useStyles();\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('rating');\n  const [page, setPage] = useState(0);\n  const [dense, setDense] = useState(false);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [loading, setLoading] = useState(false);\n  const [rows,setRows] = useState([]);\n  const [approveText, setApproveText] = useState('Approve');\n\n  const holderData = [];\n\n  const getUnapprovedAppointments= () => {\n\n    holderData.push(createData(1, 'Omar' + ' ' + 'Kabbara', 'Check water leakage', 'Maarad street , Monalisa bldg., 2nd floor', '2021-01-14 11:00:00', '2021-01-14 12:00:00\t'))\n\n    setRows(holderData);\n    }\n       \n\n    \n    \n\n  const handleApproveAppointment = async (id) => {\n    setLoading(true);\n    try {\n      setApproveText('Approving');\n      await api.approveAppointment({id})\n      .then(res=> {\n        if (!res.data.appointment.id) {\n          alert('no appointment found!')\n          console.log('app. data: ', res.data)\n        }\n        else {\n          console.log(\"appt. data: \", res.data)\n        }\n    });\n    }\n    catch {\n      alert('Failed to Approve');\n    } \n    finally {\n      setLoading(true);\n      setApproveText('Approved');\n    }\n  };\n\n  useEffect(() => {\n    if(!rows.length) {\n      getUnapprovedAppointments();\n    }\n  }, [])\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  let history = useHistory();\n\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      tabIndex={-1}\n                      key={row.id}\n                     \n                    >\n                      <TableCell padding=\"checkbox\">\n                        \n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"left\">{row.description}</TableCell>\n                      <TableCell align=\"left\">{row.location}</TableCell>\n                      <TableCell align=\"center\">{row.startDate}</TableCell>\n                      <TableCell align=\"center\">{row.endDate}</TableCell>\n                      <TableCell align='center'>\n                        <Rating\n                        name=\"customized-empty\"\n                        defaultValue={2}\n                         precision={0.5}\n                        emptyIcon={<StarBorderIcon fontSize=\"inherit\" />}\n                        />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}","/home/alijm/FinalProject/frontend/src/components/pages/customers/chat/chat.js",["284","285","286","287","288","289","290"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Fab from '@material-ui/core/Fab';\nimport SendIcon from '@material-ui/icons/Send';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    opacity:'0.90',\n    marginLeft: theme.spacing(5)\n\n  },\n  table: {\n    marginTop: theme.spacing(7)\n  },\n  Title: {\n    marginLeft: theme.spacing(2),\n    fontFamily: \"Open Sans, sans-serif\",\n    fontWeight: 700,\n    size: \"18px\",\n  },\n  chattersList: {\n    \n  },\n  chatSection: {\n    width: '95%',\n    height: '80vh'\n  },\n  messagesName: {\n    \n    marginRight: theme.spacing(20)\n  },\n  headBG: {\n      backgroundColor: '#e0e0e0'\n    \n  },\n  borderRight500: {\n      borderRight: '1px solid #e0e0e0'\n  },\n  messageArea: {\n    height: '70vh',\n    overflowY: 'auto'\n  },\n  sendIcon: {\n    marginBottom: theme.spacing(200)\n  }\n}));\n\n// create hook function: \n\nfunction ChatComponent() {\n    const [user, setUser] = useState([]);\n    const [messages, setMessages] = useState([]);\n    \n    return(\n    <div>\n        <Typography></Typography>\n    </div>\n        );\n}\n\nfunction changeChatData() {\n    \n}\n\nfunction LoayChatData() {\n    const classes = useStyles();\n\n    return(\n        <List className={classes.messageArea}>\n            <Typography className={classes.messagesName} variant=\"h6\" primary =\" Loay Farhat\">\n            &nbsp;Loay Farhat\n            </Typography>\n            <Divider />\n                    <ListItem key=\"1\">\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"right\" primary=\"Hey Loay, do you do bathroom pipe renovations?\"></ListItemText>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"right\" secondary=\"09:33\"></ListItemText>\n                            </Grid>\n                        </Grid>\n                    </ListItem>\n                    <ListItem key=\"2\">\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"left\" primary=\"Hello Ali, I'm currently not able to do any jobs. Sorry for the inconvenience.\"></ListItemText>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"left\" secondary=\"09:41\"></ListItemText>\n                            </Grid>\n                        </Grid>\n                    </ListItem>\n                    <ListItem key=\"3\">\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"right\" primary=\"Sorry to hear that.\"></ListItemText>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"right\" secondary=\"10:20\"></ListItemText>\n                            </Grid>\n                        </Grid>\n                    </ListItem>\n                </List>\n    )\n}\nfunction OmarChatData() {\n    const classes = useStyles();\n\n    return(\n        \n        <List className={classes.messageArea}>\n            <Typography className={classes.messagesName} variant=\"h6\" primary =\" Omar Kabbara\">\n            &nbsp;Omar Kabbara\n            </Typography>\n            <Divider />\n                    <ListItem key=\"1\">\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"right\" primary=\"Hello Omar, I would like to know your checkup fee please.\"></ListItemText>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"right\" secondary=\"09:30\"></ListItemText>\n                            </Grid>\n                        </Grid>\n                    </ListItem>\n                    <ListItem key=\"2\">\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"left\" primary=\"Hey Ali, I charge $20 per checkup. If you would like to know \n                                more I'd be happy to answer.\"></ListItemText>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"left\" secondary=\"09:49\"></ListItemText>\n                            </Grid>\n                        </Grid>\n                    </ListItem>\n                    <ListItem key=\"3\">\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"right\" primary=\"Great, I'll request an appointment with you soon.\"></ListItemText>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"right\" secondary=\"10:00\"></ListItemText>\n                            </Grid>\n                        </Grid>\n                    </ListItem>\n                    <ListItem key=\"4\">\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"left\" primary=\"Awaiting your request.\"></ListItemText>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"left\" secondary=\"10:11\"></ListItemText>\n                            </Grid>\n                        </Grid>\n                    </ListItem>\n                </List>\n    )\n}\nfunction NewOmarChatData() {\n    const classes = useStyles();\n\n    return(\n        \n        <List className={classes.messageArea}>\n            <Typography className={classes.messagesName} variant=\"h6\" primary =\" Omar Kabbara\">\n            &nbsp;Omar Kabbara\n            </Typography>\n            <Divider />\n                    <ListItem key=\"1\">\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"right\" primary=\"Hello Omar, I would like to know your checkup fee please.\"></ListItemText>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"right\" secondary=\"09:30\"></ListItemText>\n                            </Grid>\n                        </Grid>\n                    </ListItem>\n                    <ListItem key=\"2\">\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"left\" primary=\"Hey Ali, I charge $20 per checkup. If you would like to know \n                                more I'd be happy to answer.\"></ListItemText>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"left\" secondary=\"09:49\"></ListItemText>\n                            </Grid>\n                        </Grid>\n                    </ListItem>\n                    <ListItem key=\"3\">\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"right\" primary=\"Great, I'll request an appointment with you soon.\"></ListItemText>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"right\" secondary=\"10:00\"></ListItemText>\n                            </Grid>\n                        </Grid>\n                    </ListItem>\n                    <ListItem key=\"4\">\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"left\" primary=\"Awaiting your request.\"></ListItemText>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"left\" secondary=\"10:11\"></ListItemText>\n                            </Grid>\n                        </Grid>\n                    </ListItem>\n                    <ListItem key=\"5\">\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"right\" primary=\"I sent the request.\"></ListItemText>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"right\" secondary=\"12:05\"></ListItemText>\n                            </Grid>\n                        </Grid>\n                    </ListItem>\n                    \n                </List>\n    )\n}\nfunction FinalOmarChatData() {\n    const classes = useStyles();\n\n    return(\n        \n        <List className={classes.messageArea}>\n            <Typography className={classes.messagesName} variant=\"h6\" primary =\" Omar Kabbara\">\n            &nbsp;Omar Kabbara\n            </Typography>\n            <Divider />\n                    <ListItem key=\"1\">\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"right\" primary=\"Hello Omar, I would like to know your checkup fee please.\"></ListItemText>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"right\" secondary=\"09:30\"></ListItemText>\n                            </Grid>\n                        </Grid>\n                    </ListItem>\n                    <ListItem key=\"2\">\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"left\" primary=\"Hey Ali, I charge $20 per checkup. If you would like to know \n                                more I'd be happy to answer.\"></ListItemText>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"left\" secondary=\"09:49\"></ListItemText>\n                            </Grid>\n                        </Grid>\n                    </ListItem>\n                    <ListItem key=\"3\">\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"right\" primary=\"Great, I'll request an appointment with you soon.\"></ListItemText>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"right\" secondary=\"10:00\"></ListItemText>\n                            </Grid>\n                        </Grid>\n                    </ListItem>\n                    <ListItem key=\"4\">\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"left\" primary=\"Awaiting your request.\"></ListItemText>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"left\" secondary=\"10:11\"></ListItemText>\n                            </Grid>\n                        </Grid>\n                    </ListItem>\n                    <ListItem key=\"5\">\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"right\" primary=\"I sent the request.\"></ListItemText>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"right\" secondary=\"12:05\"></ListItemText>\n                            </Grid>\n                        </Grid>\n                    </ListItem>\n                    <ListItem key=\"6\">\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"left\" primary=\"Just approved your request. See you then!\"></ListItemText>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ListItemText align=\"left\" secondary=\"12:05\"></ListItemText>\n                            </Grid>\n                        </Grid>\n                    </ListItem>\n                    \n                </List>\n    )\n}\nconst Chat = () => {\n  const classes = useStyles();\n  const [user, setUser] = useState(1);\n  const [newMessage, setNewMessage] = useState('');\n\n  function setLastUser() {\n      setUser(4)\n  }\n\n  const handleEnterSendKeypress = (e) => {\n    //it triggers by pressing the enter key\n    if (e.key === 'Enter') {\n        setUser(3)\n        setNewMessage('');\n    }\n    setTimeout(setLastUser, 10000)\n  };\n  const handleSendKeypress = () => {\n        setUser(3)\n        setNewMessage('');\n        setTimeout(setLastUser, 10000)\n  };\n  function chooseChat() {\n       switch(user) {\n        case 1:\n            return(\n                <OmarChatData></OmarChatData>\n            )\n        case 2:\n          // code block\n          return (\n            <LoayChatData></LoayChatData>\n        )\n        case 3:\n          return (\n            <NewOmarChatData></NewOmarChatData>\n          )\n        \n        case 4: \n            return (\n                <FinalOmarChatData></FinalOmarChatData>\n            )\n          \n        default:\n            return(\n                <OmarChatData></OmarChatData>\n            )\n      }\n  }\n\n  return (\n      <div className={classes.root}>\n        <Grid className={classes.table} container>\n            <Grid item xs={12} >\n                <Typography variant=\"h6\" className={classes.Title}>Messages</Typography>\n            </Grid>\n        </Grid>\n        <Grid container component={Paper} className={classes.chatSection}>\n            <Grid item xs={3} className={classes.borderRight500}>               \n                {/* <Grid item xs={12} style={{padding: '10px'}}>\n                    <TextField id=\"outlined-basic-email\" label=\"Search for \" variant=\"outlined\" fullWidth />\n                </Grid> */}\n                 <Divider />\n                <List className={classes.chattersList}>\n                    <ListItem button key=\"RemySharp\"  onClick={() => {setUser(1)}}>\n                        <ListItemIcon>\n                            <Avatar alt=\"Remy Sharp\" src=\"/assets/omarKabbara.jpg\" />\n                        </ListItemIcon>\n                        <ListItemText>Omar Kabbara</ListItemText>\n                    </ListItem>\n                    <ListItem button key=\"CindyBaker\"onClick={() => {setUser(2)}}>\n                        <ListItemIcon>\n                            <Avatar alt=\"Cindy Baker\" src=\"https://material-ui.com/static/images/avatar/2.jpg\" />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Loay Farhat\">Loay Farhat</ListItemText>\n                    </ListItem>\n                </List>\n            </Grid>\n            <Grid item xs={9}>\n                {chooseChat()}\n                <Divider />\n                <Grid container style={{padding: '20px'}}>\n                    <Grid item xs={11}>\n                        <TextField \n                        id=\"messageField\" \n                        value={newMessage}\n                        onKeyPress={handleEnterSendKeypress}\n                        onChange={e => setNewMessage(e.target.value)} label=\"Type a message.\" fullWidth />\n                    </Grid>\n                    \n                    <Grid xs={1}  align=\"center\">\n                        <Fab  size =\"medium\" className={classes.sendIcon} color=\"primary\" onClick={handleSendKeypress} aria-label=\"add\"><SendIcon /></Fab>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n      </div>\n  );\n}\n\nexport default Chat;",{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","severity":1,"message":"296","line":26,"column":8,"nodeType":"297","messageId":"298","endLine":26,"endColumn":20},{"ruleId":"295","severity":1,"message":"299","line":33,"column":8,"nodeType":"297","messageId":"298","endLine":33,"endColumn":12},{"ruleId":"295","severity":1,"message":"300","line":34,"column":8,"nodeType":"297","messageId":"298","endLine":34,"endColumn":14},{"ruleId":"291","replacedBy":"301"},{"ruleId":"293","replacedBy":"302"},{"ruleId":"295","severity":1,"message":"303","line":8,"column":8,"nodeType":"297","messageId":"298","endLine":8,"endColumn":24},{"ruleId":"295","severity":1,"message":"304","line":9,"column":8,"nodeType":"297","messageId":"298","endLine":9,"endColumn":16},{"ruleId":"305","severity":1,"message":"306","line":209,"column":6,"nodeType":"307","endLine":209,"endColumn":8,"suggestions":"308"},{"ruleId":"295","severity":1,"message":"309","line":232,"column":9,"nodeType":"297","messageId":"298","endLine":232,"endColumn":23},{"ruleId":"295","severity":1,"message":"310","line":197,"column":11,"nodeType":"297","messageId":"298","endLine":197,"endColumn":19},{"ruleId":"305","severity":1,"message":"311","line":213,"column":6,"nodeType":"307","endLine":213,"endColumn":8,"suggestions":"312"},{"ruleId":"295","severity":1,"message":"309","line":236,"column":9,"nodeType":"297","messageId":"298","endLine":236,"endColumn":23},{"ruleId":"295","severity":1,"message":"313","line":32,"column":23,"nodeType":"297","messageId":"298","endLine":32,"endColumn":37},{"ruleId":"291","replacedBy":"314"},{"ruleId":"293","replacedBy":"315"},{"ruleId":"295","severity":1,"message":"316","line":1,"column":16,"nodeType":"297","messageId":"298","endLine":1,"endColumn":24},{"ruleId":"295","severity":1,"message":"317","line":1,"column":25,"nodeType":"297","messageId":"298","endLine":1,"endColumn":34},{"ruleId":"295","severity":1,"message":"318","line":45,"column":13,"nodeType":"297","messageId":"298","endLine":45,"endColumn":28},{"ruleId":"295","severity":1,"message":"316","line":1,"column":16,"nodeType":"297","messageId":"298","endLine":1,"endColumn":24},{"ruleId":"295","severity":1,"message":"319","line":2,"column":18,"nodeType":"297","messageId":"298","endLine":2,"endColumn":28},{"ruleId":"295","severity":1,"message":"316","line":1,"column":16,"nodeType":"297","messageId":"298","endLine":1,"endColumn":24},{"ruleId":"295","severity":1,"message":"319","line":2,"column":18,"nodeType":"297","messageId":"298","endLine":2,"endColumn":28},{"ruleId":"295","severity":1,"message":"316","line":1,"column":16,"nodeType":"297","messageId":"298","endLine":1,"endColumn":24},{"ruleId":"295","severity":1,"message":"319","line":2,"column":18,"nodeType":"297","messageId":"298","endLine":2,"endColumn":28},{"ruleId":"295","severity":1,"message":"320","line":100,"column":10,"nodeType":"297","messageId":"298","endLine":100,"endColumn":16},{"ruleId":"295","severity":1,"message":"321","line":101,"column":10,"nodeType":"297","messageId":"298","endLine":101,"endColumn":18},{"ruleId":"295","severity":1,"message":"322","line":101,"column":20,"nodeType":"297","messageId":"298","endLine":101,"endColumn":31},{"ruleId":"323","severity":1,"message":"324","line":184,"column":9,"nodeType":"325","messageId":"326","endLine":199,"endColumn":20},{"ruleId":"295","severity":1,"message":"320","line":91,"column":10,"nodeType":"297","messageId":"298","endLine":91,"endColumn":16},{"ruleId":"295","severity":1,"message":"327","line":3,"column":8,"nodeType":"297","messageId":"298","endLine":3,"endColumn":11},{"ruleId":"295","severity":1,"message":"328","line":13,"column":8,"nodeType":"297","messageId":"298","endLine":13,"endColumn":12},{"ruleId":"295","severity":1,"message":"329","line":14,"column":8,"nodeType":"297","messageId":"298","endLine":14,"endColumn":16},{"ruleId":"295","severity":1,"message":"320","line":92,"column":10,"nodeType":"297","messageId":"298","endLine":92,"endColumn":16},{"ruleId":"295","severity":1,"message":"319","line":2,"column":18,"nodeType":"297","messageId":"298","endLine":2,"endColumn":28},{"ruleId":"295","severity":1,"message":"319","line":2,"column":18,"nodeType":"297","messageId":"298","endLine":2,"endColumn":28},{"ruleId":"295","severity":1,"message":"319","line":2,"column":18,"nodeType":"297","messageId":"298","endLine":2,"endColumn":28},{"ruleId":"291","replacedBy":"330"},{"ruleId":"293","replacedBy":"331"},{"ruleId":"295","severity":1,"message":"303","line":8,"column":8,"nodeType":"297","messageId":"298","endLine":8,"endColumn":24},{"ruleId":"295","severity":1,"message":"304","line":9,"column":8,"nodeType":"297","messageId":"298","endLine":9,"endColumn":16},{"ruleId":"295","severity":1,"message":"319","line":2,"column":18,"nodeType":"297","messageId":"298","endLine":2,"endColumn":28},{"ruleId":"295","severity":1,"message":"300","line":14,"column":8,"nodeType":"297","messageId":"298","endLine":14,"endColumn":14},{"ruleId":"295","severity":1,"message":"332","line":54,"column":9,"nodeType":"297","messageId":"298","endLine":54,"endColumn":22},{"ruleId":"295","severity":1,"message":"333","line":59,"column":9,"nodeType":"297","messageId":"298","endLine":59,"endColumn":27},{"ruleId":"295","severity":1,"message":"334","line":3,"column":8,"nodeType":"297","messageId":"298","endLine":3,"endColumn":18},{"ruleId":"295","severity":1,"message":"335","line":7,"column":10,"nodeType":"297","messageId":"298","endLine":7,"endColumn":15},{"ruleId":"295","severity":1,"message":"336","line":7,"column":17,"nodeType":"297","messageId":"298","endLine":7,"endColumn":25},{"ruleId":"291","replacedBy":"337"},{"ruleId":"293","replacedBy":"338"},{"ruleId":"295","severity":1,"message":"316","line":1,"column":16,"nodeType":"297","messageId":"298","endLine":1,"endColumn":24},{"ruleId":"295","severity":1,"message":"317","line":1,"column":25,"nodeType":"297","messageId":"298","endLine":1,"endColumn":34},{"ruleId":"295","severity":1,"message":"318","line":45,"column":13,"nodeType":"297","messageId":"298","endLine":45,"endColumn":28},{"ruleId":"295","severity":1,"message":"303","line":7,"column":8,"nodeType":"297","messageId":"298","endLine":7,"endColumn":24},{"ruleId":"295","severity":1,"message":"304","line":8,"column":8,"nodeType":"297","messageId":"298","endLine":8,"endColumn":16},{"ruleId":"305","severity":1,"message":"339","line":95,"column":8,"nodeType":"307","endLine":95,"endColumn":10,"suggestions":"340"},{"ruleId":"305","severity":1,"message":"341","line":248,"column":6,"nodeType":"307","endLine":248,"endColumn":8,"suggestions":"342"},{"ruleId":"295","severity":1,"message":"343","line":269,"column":7,"nodeType":"297","messageId":"298","endLine":269,"endColumn":14},{"ruleId":"295","severity":1,"message":"344","line":2,"column":21,"nodeType":"297","messageId":"298","endLine":2,"endColumn":29},{"ruleId":"305","severity":1,"message":"306","line":210,"column":6,"nodeType":"307","endLine":210,"endColumn":8,"suggestions":"345"},{"ruleId":"295","severity":1,"message":"309","line":233,"column":9,"nodeType":"297","messageId":"298","endLine":233,"endColumn":23},{"ruleId":"295","severity":1,"message":"319","line":2,"column":18,"nodeType":"297","messageId":"298","endLine":2,"endColumn":28},{"ruleId":"295","severity":1,"message":"300","line":14,"column":8,"nodeType":"297","messageId":"298","endLine":14,"endColumn":14},{"ruleId":"295","severity":1,"message":"332","line":53,"column":9,"nodeType":"297","messageId":"298","endLine":53,"endColumn":22},{"ruleId":"295","severity":1,"message":"333","line":58,"column":9,"nodeType":"297","messageId":"298","endLine":58,"endColumn":27},{"ruleId":"295","severity":1,"message":"346","line":74,"column":10,"nodeType":"297","messageId":"298","endLine":74,"endColumn":12},{"ruleId":"295","severity":1,"message":"347","line":74,"column":14,"nodeType":"297","messageId":"298","endLine":74,"endColumn":19},{"ruleId":"295","severity":1,"message":"348","line":75,"column":10,"nodeType":"297","messageId":"298","endLine":75,"endColumn":14},{"ruleId":"295","severity":1,"message":"349","line":76,"column":10,"nodeType":"297","messageId":"298","endLine":76,"endColumn":14},{"ruleId":"295","severity":1,"message":"350","line":77,"column":10,"nodeType":"297","messageId":"298","endLine":77,"endColumn":19},{"ruleId":"295","severity":1,"message":"351","line":77,"column":21,"nodeType":"297","messageId":"298","endLine":77,"endColumn":33},{"ruleId":"295","severity":1,"message":"352","line":84,"column":9,"nodeType":"297","messageId":"298","endLine":84,"endColumn":27},{"ruleId":"295","severity":1,"message":"353","line":2,"column":21,"nodeType":"297","messageId":"298","endLine":2,"endColumn":30},{"ruleId":"295","severity":1,"message":"354","line":4,"column":8,"nodeType":"297","messageId":"298","endLine":4,"endColumn":14},{"ruleId":"295","severity":1,"message":"355","line":5,"column":8,"nodeType":"297","messageId":"298","endLine":5,"endColumn":19},{"ruleId":"295","severity":1,"message":"356","line":6,"column":8,"nodeType":"297","messageId":"298","endLine":6,"endColumn":17},{"ruleId":"295","severity":1,"message":"304","line":8,"column":8,"nodeType":"297","messageId":"298","endLine":8,"endColumn":16},{"ruleId":"295","severity":1,"message":"357","line":9,"column":8,"nodeType":"297","messageId":"298","endLine":9,"endColumn":12},{"ruleId":"295","severity":1,"message":"358","line":10,"column":8,"nodeType":"297","messageId":"298","endLine":10,"endColumn":12},{"ruleId":"295","severity":1,"message":"359","line":198,"column":10,"nodeType":"297","messageId":"298","endLine":198,"endColumn":17},{"ruleId":"295","severity":1,"message":"360","line":200,"column":10,"nodeType":"297","messageId":"298","endLine":200,"endColumn":21},{"ruleId":"361","severity":1,"message":"362","line":206,"column":42,"nodeType":"363","messageId":"364","endLine":206,"endColumn":43},{"ruleId":"361","severity":1,"message":"362","line":206,"column":48,"nodeType":"363","messageId":"364","endLine":206,"endColumn":49},{"ruleId":"295","severity":1,"message":"365","line":215,"column":9,"nodeType":"297","messageId":"298","endLine":215,"endColumn":33},{"ruleId":"305","severity":1,"message":"341","line":243,"column":6,"nodeType":"307","endLine":243,"endColumn":8,"suggestions":"366"},{"ruleId":"295","severity":1,"message":"343","line":264,"column":7,"nodeType":"297","messageId":"298","endLine":264,"endColumn":14},{"ruleId":"295","severity":1,"message":"367","line":5,"column":8,"nodeType":"297","messageId":"298","endLine":5,"endColumn":11},{"ruleId":"295","severity":1,"message":"368","line":62,"column":10,"nodeType":"297","messageId":"298","endLine":62,"endColumn":23},{"ruleId":"295","severity":1,"message":"369","line":63,"column":12,"nodeType":"297","messageId":"298","endLine":63,"endColumn":16},{"ruleId":"295","severity":1,"message":"370","line":63,"column":18,"nodeType":"297","messageId":"298","endLine":63,"endColumn":25},{"ruleId":"295","severity":1,"message":"371","line":64,"column":12,"nodeType":"297","messageId":"298","endLine":64,"endColumn":20},{"ruleId":"295","severity":1,"message":"372","line":64,"column":22,"nodeType":"297","messageId":"298","endLine":64,"endColumn":33},{"ruleId":"295","severity":1,"message":"373","line":73,"column":10,"nodeType":"297","messageId":"298","endLine":73,"endColumn":24},"no-native-reassign",["374"],"no-negated-in-lhs",["375"],"no-unused-vars","'Appointments' is defined but never used.","Identifier","unusedVar","'Echo' is defined but never used.","'Pusher' is defined but never used.",["374"],["375"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAllTechniciansData' and 'rows.length'. Either include them or remove the dependency array.","ArrayExpression",["376"],"'preventDefault' is assigned a value but never used.","'techData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllTechniciansData', 'holderData', and 'rows.length'. Either include them or remove the dependency array.",["377"],"'setCurrentDate' is assigned a value but never used.",["374"],["375"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'getAppointments' is assigned a value but never used.","'RouterLink' is defined but never used.","'filter' is assigned a value but never used.","'anchorEl' is assigned a value but never used.","'setAnchorEl' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'api' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.",["374"],["375"],"'handleProfile' is assigned a value but never used.","'handleAppointments' is assigned a value but never used.","'Typography' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.",["374"],["375"],"React Hook useEffect has a missing dependency: 'id.id'. Either include it or remove the dependency array.",["378"],"React Hook useEffect has missing dependencies: 'getUnapprovedAppointments' and 'rows.length'. Either include them or remove the dependency array.",["379"],"'history' is assigned a value but never used.","'Redirect' is defined but never used.",["380"],"'id' is assigned a value but never used.","'setId' is assigned a value but never used.","'name' is assigned a value but never used.","'city' is assigned a value but never used.","'residence' is assigned a value but never used.","'setResidence' is assigned a value but never used.","'handleCustomerInfo' is assigned a value but never used.","'useParams' is defined but never used.","'Button' is defined but never used.","'CssBaseline' is defined but never used.","'TextField' is defined but never used.","'Link' is defined but never used.","'Grid' is defined but never used.","'loading' is assigned a value but never used.","'approveText' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'handleApproveAppointment' is assigned a value but never used.",["381"],"'Box' is defined but never used.","'ChatComponent' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'messages' is assigned a value but never used.","'setMessages' is assigned a value but never used.","'changeChatData' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"382","fix":"390"},{"desc":"388","fix":"391"},"Update the dependencies array to be: [getAllTechniciansData, rows.length]",{"range":"392","text":"393"},"Update the dependencies array to be: [getAllTechniciansData, holderData, rows.length]",{"range":"394","text":"395"},"Update the dependencies array to be: [id.id]",{"range":"396","text":"397"},"Update the dependencies array to be: [getUnapprovedAppointments, rows.length]",{"range":"398","text":"399"},{"range":"400","text":"393"},{"range":"401","text":"399"},[6116,6118],"[getAllTechniciansData, rows.length]",[6302,6304],"[getAllTechniciansData, holderData, rows.length]",[2689,2691],"[id.id]",[7179,7181],"[getUnapprovedAppointments, rows.length]",[6121,6123],[7119,7121]]