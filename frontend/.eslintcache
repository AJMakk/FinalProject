[{"/home/alijm/FinalProject/frontend/src/index.js":"1","/home/alijm/FinalProject/frontend/src/App.js":"2","/home/alijm/FinalProject/frontend/src/reportWebVitals.js":"3","/home/alijm/FinalProject/frontend/src/components/headers/guestHeader.js":"4","/home/alijm/FinalProject/frontend/src/components/containers/AppContainer.js":"5","/home/alijm/FinalProject/frontend/src/api.js":"6","/home/alijm/FinalProject/frontend/src/components/headers/customerHeader.js":"7","/home/alijm/FinalProject/frontend/src/theme.js":"8","/home/alijm/FinalProject/frontend/src/components/containers/FormContainer.js":"9","/home/alijm/FinalProject/frontend/src/components/pages/home.js":"10","/home/alijm/FinalProject/frontend/src/components/pages/logIn.js":"11","/home/alijm/FinalProject/frontend/src/components/pages/logOut.js":"12","/home/alijm/FinalProject/frontend/src/components/pages/customers/register/register.js":"13","/home/alijm/FinalProject/frontend/src/components/pages/customers/register/citySelect.js":"14","/home/alijm/FinalProject/frontend/src/components/pages/customers/search/allTechnicians.js":"15","/home/alijm/FinalProject/frontend/src/components/pages/customers/search/results.js":"16"},{"size":490,"mtime":1608046244740,"results":"17","hashOfConfig":"18"},{"size":1788,"mtime":1608493384263,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1607688082240,"results":"20","hashOfConfig":"18"},{"size":3776,"mtime":1608493009193,"results":"21","hashOfConfig":"18"},{"size":473,"mtime":1607910318571,"results":"22","hashOfConfig":"18"},{"size":1429,"mtime":1608216807440,"results":"23","hashOfConfig":"18"},{"size":4721,"mtime":1608492986283,"results":"24","hashOfConfig":"18"},{"size":467,"mtime":1608306450920,"results":"25","hashOfConfig":"18"},{"size":473,"mtime":1608047068410,"results":"26","hashOfConfig":"18"},{"size":236,"mtime":1608306789700,"results":"27","hashOfConfig":"18"},{"size":7237,"mtime":1608335016306,"results":"28","hashOfConfig":"18"},{"size":848,"mtime":1608084394235,"results":"29","hashOfConfig":"18"},{"size":6045,"mtime":1608334487796,"results":"30","hashOfConfig":"18"},{"size":1985,"mtime":1608334403976,"results":"31","hashOfConfig":"18"},{"size":9064,"mtime":1608542056466,"results":"32","hashOfConfig":"18"},{"size":3134,"mtime":1608495716053,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"bra87i",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/alijm/FinalProject/frontend/src/index.js",[],["71","72"],"/home/alijm/FinalProject/frontend/src/App.js",[],"/home/alijm/FinalProject/frontend/src/reportWebVitals.js",[],"/home/alijm/FinalProject/frontend/src/components/headers/guestHeader.js",["73","74"],"import React, {useState} from \"react\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport { \n  AppBar, \n  Toolbar, \n  Typography, \n  makeStyles,\n  Button,\n  fade,\n  TextField,\n } from '@material-ui/core';\n import SearchIcon from \"@material-ui/icons/Search\";\n import HelpIcon from '@material-ui/icons/Help';\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n     \n     background: 'none',\n     paddingRight: \"79px\",\n     paddingLeft: \"118px\",\n  },\n\n  logo: {\n    fontFamily: \"Work Sans, sans-serif\",\n    fontWeight: 600,\n    color: \"black\",\n    textAlign: \"left\",\n  },\n\n  searchContainer: {\n    display: \"flex\",\n    backgroundColor: fade('#00000', 0.15),\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    marginTop: \"-15px\",\n    marginBottom: \"5px\",\n  },\n  searchIcon: {\n    alignSelf: \"flex-end\",\n    marginBottom: \"5px\",\n    color:'#000000'\n  },\n  searchInput: {\n    width: \"250px\",\n    margin: \"5px\",\n  },\n\n /*  logo: {\n    maxWidth: 200,\n  }, */\n\n  menuButton: {\n    fontFamily: \"Open Sans, sans-serif\",\n    fontWeight: 700,\n    size: \"18px\",\n    marginLeft: \"20px\",\n  },\n\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n\n}));\n\nconst guestHeaderData = [\n  \n  {\n    label: \"All Technicians\",\n    href: \"/alltechnicians\",\n  },\n  {\n    label: <HelpIcon ></HelpIcon>,\n    href: \"/help\",\n  },\n  {\n    label: \"Log In\",\n    href: \"/login\",\n  },\n  {\n    label: \"Register\",\n    href: \"/register\",\n  },\n];\n\nexport default function GuestHeader() {\n  const { header, logo, menuButton, toolbar } = useStyles();\n  const classes = useStyles();\n  const [filter, setFilter] = useState(\"\");\n\n  let history = useHistory();\n\n  const handleSearchChange = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const handleSearchKeypress = (e) => {\n    //it triggers by pressing the enter key\n\n    if (e.key === 'Enter') {\n      history.push(\"/search\");\n    }\n  };\n\n  const displayDesktop = () => {\n    return (\n       <Toolbar className={toolbar}>\n       <Button\n          {...{\n            key: \"logoHome\",\n            color:\"black\",\n            to: \"/\",\n            component: RouterLink,\n            className: logo\n          }} \n        >\n        {TechieFindLogo}\n        {/* <img src=\"TFlogo.png\" alt=\"logo\"  /> */}\n        </Button>\n       \n        <div className={classes.searchContainer}>\n            <SearchIcon className={classes.searchIcon} />\n            <TextField\n              className={classes.searchInput}\n              onKeyPress={handleSearchKeypress}\n              onChange={handleSearchChange}\n              label=\"search for technicians here!\"\n              variant=\"standard\"\n            />\n          </div>\n\n       <div>{getMenuButtons()}</div>\n       \n       </Toolbar>\n    );\n  };\n  \n  const TechieFindLogo = (\n    <Typography variant=\"h6\" component=\"h1\" className={logo}>\n      TechieFind\n    </Typography> \n    );\n\n  const getMenuButtons = () => {\n    return guestHeaderData.map(({label, href}) => {\n      return (\n        <Button\n          {...{\n            key: label,\n            color:\"black\",\n            to: href,\n            component: RouterLink,\n            className: menuButton\n          }} \n        >\n        {label}\n        </Button>\n      );\n    });\n    \n  };\n  \n        \n  \n\n  return (\n    <header>\n      <AppBar className={header} elevation={0}>\n        {displayDesktop()}\n      </AppBar>\n    </header>\n  );\n}\n\n{/* <nav>\n<NavLink exact activeClassName=\"active\"  to=\"/home\">\n  Home \n</NavLink>\n<NavLink activeClassName=\"active\"  to=\"/search\">\n  Search For Technicians\n</NavLink>\n<NavLink activeClassName=\"active\"  to=\"/help\">\n  Help\n</NavLink>\n<NavLink activeClassName=\"active\"  to=\"/login\">\n  Log In\n</NavLink>\n<NavLink activeClassName=\"active\"  to=\"/register\">\n  Register\n</NavLink>\n</nav> */}","/home/alijm/FinalProject/frontend/src/components/containers/AppContainer.js",[],"/home/alijm/FinalProject/frontend/src/api.js",[],"/home/alijm/FinalProject/frontend/src/components/headers/customerHeader.js",["75","76"],"import React, {useState} from \"react\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport api from '../../api';\nimport { \n  AppBar, \n  Toolbar, \n  Typography, \n  makeStyles,\n  Button,\n  fade,\n  TextField,\n } from '@material-ui/core';\n import SearchIcon from \"@material-ui/icons/Search\";\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport HelpIcon from '@material-ui/icons/Help';\n\nconst useStyles = makeStyles(() => ({\n  header: {\n     background: \"none\",\n     paddingRight: \"79px\",\n     paddingLeft: \"118px\",\n  },\n\n  logo: {\n    fontFamily: \"Work Sans, sans-serif\",\n    fontWeight: 600,\n    color: \"black\",\n    textAlign: \"left\",\n  },\n\n  searchContainer: {\n    display: \"flex\",\n    backgroundColor: fade('#00000', 0.15),\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    marginTop: \"-15px\",\n    marginBottom: \"5px\",\n  },\n\n  searchIcon: {\n    alignSelf: \"flex-end\",\n    marginBottom: \"5px\",\n    color:'#000000'\n  },\n\n  searchInput: {\n    width: \"250px\",\n    margin: \"5px\",\n  },\n\n  menuButton: {\n    fontFamily: \"Open Sans, sans-serif\",\n    fontWeight: 700,\n    size: \"18px\",\n    marginLeft: \"20px\",\n  },\n\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n\n}));\n\nconst customerHeaderData = [\n  {\n    label: \"All Technicians\",\n    href: \"/alltechnicians\",\n  },\n  {\n    label: <HelpIcon ></HelpIcon>,\n    href: \"/help\",\n  },\n  {\n    label: <NotificationsIcon></NotificationsIcon>,\n    href: \"/notifications\",\n  },\n  {\n    label: <AccountCircleIcon></AccountCircleIcon>,\n    href: \"/myprofile\",\n  },\n];\n\nexport default function CustomerHeader() {\n  const { header, logo, menuButton, toolbar } = useStyles();\n  const classes = useStyles();\n  const [filter, setFilter] = useState(\"\");\n\n  let history = useHistory();\n\n  const handleSearchChange = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const handleSearchKeypress = (e) => {\n    //it triggers by pressing the enter key\n    if (e.key === 'Enter') {\n      history.push(\"/search\");\n    }\n  };\n\n  const handleLogout = () => {\n    api.logout().then(res => {\n      console.log(\"res: \",res);\n      \n      localStorage.removeItem('AccessToken');\n      localStorage.removeItem('UsersName');\n      localStorage.clear();\n\n      history.push(\"/\");\n      window.location.reload();\n      alert(res.data.message) ;\n    });\n      \n}\n  const displayDesktop = () => {\n    return (\n      <Toolbar className={toolbar}>\n      <Button\n         {...{\n           key: \"logoHome\",\n           color:\"black\",\n           to: \"/\",\n           component: RouterLink,\n           className: logo\n         }} \n       >\n       {TechieFindLogo}\n       {/* <img src=\"TFlogo.png\" alt=\"logo\"  /> */}\n       </Button>\n      \n       <div className={classes.searchContainer}>\n            <SearchIcon className={classes.searchIcon} />\n            <TextField\n              className={classes.searchInput}\n              onKeyPress={handleSearchKeypress}\n              onChange={handleSearchChange}\n              label=\"search for technicians here!\"\n              variant=\"standard\"\n            />\n          </div>\n\n      <div>{getMenuButtons()}</div>\n      <Button\n          {...{\n            key: \"logout\",\n            color:\"black\",\n            className: menuButton\n          }} \n          onClick = {()=>{handleLogout()}}\n        >\n        Logout\n        {/* <img src=\"TFlogo.png\" alt=\"logo\"  /> */}\n        </Button>\n       \n      </Toolbar>\n    );\n  };\n  \n  const TechieFindLogo = (\n    <Typography variant=\"h6\" component=\"h1\" className={logo}>\n      TechieFind\n    </Typography> \n    );\n\n  const getMenuButtons = () => {\n    return customerHeaderData.map(({label, href}) => {\n      return (\n        <Button\n          {...{\n            key: label,\n            color:\"black\",\n            to: href,\n            component: RouterLink,\n            className: menuButton\n          }} \n        >\n        {label}\n        </Button>\n      );\n    });\n  };\n\n  return (\n    <header>\n      <AppBar className={header} elevation={0}>\n        {displayDesktop()}\n      </AppBar>\n    </header>\n  );\n}\n\n{/* <nav>\n      <NavLink exact activeClassName=\"active\"  to=\"/home\">\n        Home \n      </NavLink>\n      <NavLink activeClassName=\"active\"  to=\"/search\">\n        Search For Technicians\n      </NavLink>\n      <NavLink activeClassName=\"active\"  to=\"/help\">\n        Help\n      </NavLink>\n      <NavLink activeClassName=\"active\"  to=\"/notifications\">\n        Notifications\n      </NavLink>\n      <NavLink activeClassName=\"active\"  to=\"/logout\">\n        Log Out\n      </NavLink>\n      <NavLink activeClassName=\"active\"  to=\"/myprofile\">\n        My Profile\n      </NavLink>\n    </nav>  */}","/home/alijm/FinalProject/frontend/src/theme.js",[],"/home/alijm/FinalProject/frontend/src/components/containers/FormContainer.js",[],["77","78"],"/home/alijm/FinalProject/frontend/src/components/pages/home.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/logIn.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/logOut.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/customers/register/register.js",["79","80"],"import React, {useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport api from '../../../../api';\nimport AsynchronousSearchCities from './citySelect';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"/\">\n        TechieFind\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(10),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Register() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [cityId, setCityId] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n\n  const handleChange = (event,value) => {\n    let newCityId =  value.id;\n    setCityId(newCityId);\n    console.log('child City Id: ', newCityId);\n  }\n\n  const handleSubmit = async () => {\n    setSubmitting(true);\n    try {\n     await api.register({\n         firstName, lastName, cityId, email, password, confirmPassword\n     });\n     history.push('/')\n    }\n    catch {\n     alert('Failed to Register');\n    } \n    finally {\n     setSubmitting(false);\n    }\n    setTimeout(() => {\n      setSubmitting(false);\n    }, 3000)\n    };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                value={firstName}\n                onChange={e => setFirstName(e.target.value)}\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                value={lastName}\n                onChange={e => setLastName(e.target.value)}\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                name=\"password\"\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                size='small'\n                required\n                fullWidth\n                name=\"confirmPassword\"\n                value={confirmPassword}\n                onChange={e => setConfirmPassword(e.target.value)}\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"confirmPassword\"\n                autoComplete=\"current-confirm-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n            <AsynchronousSearchCities handleChange={handleChange} ></AsynchronousSearchCities>\n            </Grid>\n            {/* <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid> */}\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"inherit\"\n            className={classes.submit}\n            onClick={handleSubmit}\n            disabled={submitting}>\n            {submitting? 'Registering...' : 'Register'}\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"login\" variant=\"body2\">\n                Already have an account? Log in !\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","/home/alijm/FinalProject/frontend/src/components/pages/customers/register/citySelect.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/customers/search/allTechnicians.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/customers/search/results.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":89,"column":10,"nodeType":"87","messageId":"88","endLine":89,"endColumn":16},{"ruleId":"89","severity":1,"message":"90","line":175,"column":1,"nodeType":"91","messageId":"92","endLine":191,"endColumn":11},{"ruleId":"85","severity":1,"message":"86","line":88,"column":10,"nodeType":"87","messageId":"88","endLine":88,"endColumn":16},{"ruleId":"89","severity":1,"message":"90","line":194,"column":1,"nodeType":"91","messageId":"92","endLine":213,"endColumn":16},{"ruleId":"81","replacedBy":"93"},{"ruleId":"83","replacedBy":"94"},{"ruleId":"85","severity":1,"message":"95","line":8,"column":8,"nodeType":"87","messageId":"88","endLine":8,"endColumn":24},{"ruleId":"85","severity":1,"message":"96","line":9,"column":8,"nodeType":"87","messageId":"88","endLine":9,"endColumn":16},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'filter' is assigned a value but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["97"],["98"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","no-global-assign","no-unsafe-negation"]