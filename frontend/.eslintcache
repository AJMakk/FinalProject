[{"/home/alijm/FinalProject/frontend/src/index.js":"1","/home/alijm/FinalProject/frontend/src/App.js":"2","/home/alijm/FinalProject/frontend/src/reportWebVitals.js":"3","/home/alijm/FinalProject/frontend/src/components/headers/guestHeader.js":"4","/home/alijm/FinalProject/frontend/src/components/containers/AppContainer.js":"5","/home/alijm/FinalProject/frontend/src/api.js":"6","/home/alijm/FinalProject/frontend/src/components/headers/customerHeader.js":"7","/home/alijm/FinalProject/frontend/src/theme.js":"8","/home/alijm/FinalProject/frontend/src/components/containers/FormContainer.js":"9","/home/alijm/FinalProject/frontend/src/components/pages/home.js":"10","/home/alijm/FinalProject/frontend/src/components/pages/logIn.js":"11","/home/alijm/FinalProject/frontend/src/components/pages/logOut.js":"12","/home/alijm/FinalProject/frontend/src/components/pages/customers/register.js":"13","/home/alijm/FinalProject/frontend/src/components/pages/customers/search/search.js":"14"},{"size":490,"mtime":1608046244740,"results":"15","hashOfConfig":"16"},{"size":1566,"mtime":1608165975930,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1607688082240,"results":"18","hashOfConfig":"16"},{"size":2606,"mtime":1608125630210,"results":"19","hashOfConfig":"16"},{"size":473,"mtime":1607910318571,"results":"20","hashOfConfig":"16"},{"size":1338,"mtime":1608034414740,"results":"21","hashOfConfig":"16"},{"size":2971,"mtime":1608125760250,"results":"22","hashOfConfig":"16"},{"size":164,"mtime":1608036391030,"results":"23","hashOfConfig":"16"},{"size":473,"mtime":1608047068410,"results":"24","hashOfConfig":"16"},{"size":332,"mtime":1608084377421,"results":"25","hashOfConfig":"16"},{"size":7187,"mtime":1608122862830,"results":"26","hashOfConfig":"16"},{"size":848,"mtime":1608084394235,"results":"27","hashOfConfig":"16"},{"size":9244,"mtime":1608127476260,"results":"28","hashOfConfig":"16"},{"size":9024,"mtime":1608168274110,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"bra87i",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/alijm/FinalProject/frontend/src/index.js",[],["66","67"],"/home/alijm/FinalProject/frontend/src/App.js",[],"/home/alijm/FinalProject/frontend/src/reportWebVitals.js",[],"/home/alijm/FinalProject/frontend/src/components/headers/guestHeader.js",["68"],"import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { \n  AppBar, \n  Toolbar, \n  Typography, \n  makeStyles,\n  Button,\n } from '@material-ui/core';\n import HelpIcon from '@material-ui/icons/Help';\n\nconst useStyles = makeStyles(() => ({\n  header: {\n     backgroundColor: \"#698736\",\n     paddingRight: \"79px\",\n     paddingLeft: \"118px\",\n  },\n\n  logo: {\n    fontFamily: \"Work Sans, sans-serif\",\n    fontWeight: 600,\n    color: \"#FFFEFE\",\n    textAlign: \"left\",\n  },\n\n /*  logo: {\n    maxWidth: 200,\n  }, */\n\n  menuButton: {\n    fontFamily: \"Open Sans, sans-serif\",\n    fontWeight: 700,\n    size: \"18px\",\n    marginLeft: \"38px\",\n  },\n\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n\n}));\n\nconst guestHeaderData = [\n  \n  {\n    label: \"Search For Technicians\",\n    href: \"/search\",\n  },\n  {\n    label: <HelpIcon ></HelpIcon>,\n    href: \"/help\",\n  },\n  {\n    label: \"Log In\",\n    href: \"/login\",\n  },\n  {\n    label: \"Register\",\n    href: \"/register\",\n  },\n];\n\nexport default function GuestHeader() {\n  const { header, logo, menuButton, toolbar } = useStyles();\n\n  const displayDesktop = () => {\n    return (\n       <Toolbar className={toolbar}>\n       <Button\n          {...{\n            key: \"logoHome\",\n            color:\"inherit\",\n            to: \"/\",\n            component: RouterLink,\n            className: logo\n          }} \n        >\n        {TechieFindLogo}\n        {/* <img src=\"TFlogo.png\" alt=\"logo\"  /> */}\n        </Button>\n       \n        \n       <div>{getMenuButtons()}</div>\n       \n       </Toolbar>\n    );\n  };\n  \n  const TechieFindLogo = (\n    <Typography variant=\"h6\" component=\"h1\" className={logo}>\n      TechieFind\n    </Typography> \n    );\n\n  const getMenuButtons = () => {\n    return guestHeaderData.map(({label, href}) => {\n      return (\n        <Button\n          {...{\n            key: label,\n            color:\"inherit\",\n            to: href,\n            component: RouterLink,\n            className: menuButton\n          }} \n        >\n        {label}\n        </Button>\n      );\n    });\n    \n  };\n  \n        \n  \n\n  return (\n    <header>\n      <AppBar className={header}>\n        {displayDesktop()}\n      </AppBar>\n    </header>\n  );\n}\n\n{/* <nav>\n<NavLink exact activeClassName=\"active\"  to=\"/home\">\n  Home \n</NavLink>\n<NavLink activeClassName=\"active\"  to=\"/search\">\n  Search For Technicians\n</NavLink>\n<NavLink activeClassName=\"active\"  to=\"/help\">\n  Help\n</NavLink>\n<NavLink activeClassName=\"active\"  to=\"/login\">\n  Log In\n</NavLink>\n<NavLink activeClassName=\"active\"  to=\"/register\">\n  Register\n</NavLink>\n</nav> */}","/home/alijm/FinalProject/frontend/src/components/containers/AppContainer.js",[],"/home/alijm/FinalProject/frontend/src/api.js",["69"],"import axios from 'axios';\n\nconst BASE_API_URL = 'http://localhost:8000/api';\n\nconst getTokenFromStorage = {\n    headers: {\n      authorization: 'Bearer ' + localStorage.getItem('AccessToken')\n    }\n  };\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n\n    login: (loginCredentials) =>\n        axios.post(`${BASE_API_URL}/login`, loginCredentials),\n\n    register: (newUserInfo) =>\n        axios.post(`${BASE_API_URL}/register`,{first_name:newUserInfo.firstName,\n             last_name:newUserInfo.lastName,city_id:newUserInfo.cityId, email:newUserInfo.email,\n             password:newUserInfo.password, password_confirmation:newUserInfo.confirmPassword}),\n\n    logout: () =>\n        axios.get(`${BASE_API_URL}/logout`),\n    \n\n    /* getAllCategories: () => \n        axios.get(`${BASE_API_URL}/categories`, getTokenFromStorage),\n    getOneCategory: (id) =>\n        axios.get(`${BASE_API_URL}/categories/${id}`, getTokenFromStorage),\n    addCategory: (category) =>\n        axios.post(`${BASE_API_URL}/categories/`,{name:category.name} , getTokenFromStorage),\n    updateCategory: (category, id) =>\n        axios.put(`${BASE_API_URL}/categories/${id}`, {name:category.name}, getTokenFromStorage),\n    deleteCategory: (id) =>\n        axios.delete(`${BASE_API_URL}/categories/${id}`, getTokenFromStorage), */\n\n}",["70","71"],"/home/alijm/FinalProject/frontend/src/components/headers/customerHeader.js",["72"],"import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { \n  AppBar, \n  Toolbar, \n  Typography, \n  makeStyles,\n  Button,\n } from '@material-ui/core';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport HelpIcon from '@material-ui/icons/Help';\n\nconst useStyles = makeStyles(() => ({\n  header: {\n     backgroundColor: \"#698736\",\n     paddingRight: \"79px\",\n     paddingLeft: \"118px\",\n  },\n\n  logo: {\n    fontFamily: \"Work Sans, sans-serif\",\n    fontWeight: 600,\n    color: \"#FFFEFE\",\n    textAlign: \"left\",\n  },\n\n  menuButton: {\n    fontFamily: \"Open Sans, sans-serif\",\n    fontWeight: 700,\n    size: \"18px\",\n    marginLeft: \"38px\",\n  },\n\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n\n}));\n\nconst customerHeaderData = [\n  {\n    label: \"Search For Technicians\",\n    href: \"/search\",\n  },\n  {\n    label: <HelpIcon ></HelpIcon>,\n    href: \"/help\",\n  },\n  {\n    label: <NotificationsIcon></NotificationsIcon>,\n    href: \"/notifications\",\n  },\n  {\n    label: <AccountCircleIcon></AccountCircleIcon>,\n    href: \"/myprofile\",\n  },\n  {\n    label: \"Log Out\",\n    href: \"/logout\",\n  },\n];\n\nexport default function CustomerHeader() {\n  const { header, logo, menuButton, toolbar } = useStyles();\n\n  const displayDesktop = () => {\n    return (\n      <Toolbar className={toolbar}>\n      <Button\n         {...{\n           key: \"logoHome\",\n           color:\"inherit\",\n           to: \"/\",\n           component: RouterLink,\n           className: logo\n         }} \n       >\n       {TechieFindLogo}\n       {/* <img src=\"TFlogo.png\" alt=\"logo\"  /> */}\n       </Button>\n      \n      <div>{getMenuButtons()}</div>\n      </Toolbar>\n    );\n  };\n  \n  const TechieFindLogo = (\n    <Typography variant=\"h6\" component=\"h1\" className={logo}>\n      TechieFind\n    </Typography> \n    );\n\n  const getMenuButtons = () => {\n    return customerHeaderData.map(({label, href}) => {\n      return (\n        <Button\n          {...{\n            key: label,\n            color:\"inherit\",\n            to: href,\n            component: RouterLink,\n            className: menuButton\n          }} \n        >\n        {label}\n        </Button>\n      );\n    });\n  };\n\n  return (\n    <header>\n      <AppBar className={header}>\n        {displayDesktop()}\n      </AppBar>\n    </header>\n  );\n}\n\n{/* <nav>\n      <NavLink exact activeClassName=\"active\"  to=\"/home\">\n        Home \n      </NavLink>\n      <NavLink activeClassName=\"active\"  to=\"/search\">\n        Search For Technicians\n      </NavLink>\n      <NavLink activeClassName=\"active\"  to=\"/help\">\n        Help\n      </NavLink>\n      <NavLink activeClassName=\"active\"  to=\"/notifications\">\n        Notifications\n      </NavLink>\n      <NavLink activeClassName=\"active\"  to=\"/logout\">\n        Log Out\n      </NavLink>\n      <NavLink activeClassName=\"active\"  to=\"/myprofile\">\n        My Profile\n      </NavLink>\n    </nav>  */}","/home/alijm/FinalProject/frontend/src/theme.js",[],"/home/alijm/FinalProject/frontend/src/components/containers/FormContainer.js",[],["73","74"],"/home/alijm/FinalProject/frontend/src/components/pages/home.js",["75","76","77"],"import React, {useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport AppContainer from '../containers/AppContainer.js';\nimport {Link} from 'react-router-dom';\n\n\nexport default function Home() {\n\n   \nreturn (\n    <AppContainer title=\"Home\">\n        <p>Welcome to the Home Page!</p>\n    </AppContainer>\n)\n    \n};","/home/alijm/FinalProject/frontend/src/components/pages/logIn.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/logOut.js",[],"/home/alijm/FinalProject/frontend/src/components/pages/customers/register.js",["78","79"],"/* import '../../../CSS/register.css';\nimport React, {useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport FormContainer from '../../containers/FormContainer';\nimport api from '../../../api';\nimport Button from '@material-ui/core/Button';\n\n\n\nexport default function Register() {\n    const history = useHistory();\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [cityId, setCityId] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [submitting, setSubmitting] = useState(false);\n\n    const handleSubmit = async () => {\n       setSubmitting(true);\n       try {\n        await api.register({\n            firstName, lastName, cityId, email, password, confirmPassword\n        });\n        history.push('/')\n    }catch {\n        alert('Failed to Register');\n    } finally {\n        setSubmitting(false);\n    }\n       setTimeout(() => {\n         setSubmitting(false);\n       }, 3000)\n     }\n\n    return(\n        <FormContainer title=\"Register\" >\n        <form>\n            <div className=\"form-group\">\n                <label>First Name</label>\n                <input \n                className=\"form-control\" \n                type=\"text\"\n                value={firstName}\n                onChange={e => setFirstName(e.target.value)}/>\n            </div>\n            <div className=\"form-group\">\n                <label>Last Name</label>\n                <input \n                className=\"form-control\" \n                type=\"text\"\n                value={lastName}\n                onChange={e => setLastName(e.target.value)}/>\n            </div>\n            <div className=\"form-group\">\n                <label>city ID</label>\n                <input \n                className=\"form-control\" \n                type=\"number\"\n                value={cityId}\n                onChange={e => setCityId(e.target.value)}/>\n            </div>\n            <div className=\"form-group\">\n                <label>Email</label>\n                <input \n                className=\"form-control\" \n                type=\"email\"\n                value={email}\n                onChange={e => setEmail(e.target.value)}/>\n            </div>\n            <div className=\"form-group\">\n                <label>Password</label>\n                <input \n                type=\"password\" \n                value={password}\n                onChange={e => setPassword(e.target.value)}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label>Confirm Password</label>\n                <input \n                className=\"form-control\" \n                type=\"password\"\n                value={confirmPassword}\n                onChange={e => setConfirmPassword(e.target.value)}/>\n            </div>\n            <div className=\"form-group\">\n                <button\n                type=\"button\"\n                className=\"btn btn-success\"\n                onClick={handleSubmit}\n                disabled={submitting}>\n                    {submitting? 'REGISTERING...' : 'Register'}\n                </button>\n            </div>\n        </form>\n        \n        </FormContainer>\n      )\n   \n}; */\n\nimport React, {useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport api from '../../../api';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"/\">\n        TechieFind\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(10),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Register() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [cityId, setCityId] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n\n  const handleSubmit = async () => {\n    setSubmitting(true);\n    try {\n     await api.register({\n         firstName, lastName, cityId, email, password, confirmPassword\n     });\n     history.push('/')\n    }\n    catch {\n     alert('Failed to Register');\n    } \n    finally {\n     setSubmitting(false);\n    }\n    setTimeout(() => {\n      setSubmitting(false);\n    }, 3000)\n    };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                value={firstName}\n                onChange={e => setFirstName(e.target.value)}\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                value={lastName}\n                onChange={e => setLastName(e.target.value)}\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"confirmPassword\"\n                value={confirmPassword}\n                onChange={e => setConfirmPassword(e.target.value)}\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"confirmPassword\"\n                autoComplete=\"current-confirm-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"cityId\"\n                label=\"city ID\"\n                name=\"cityId\"\n                value={cityId}\n                onChange={e => setCityId(e.target.value)}\n                autoComplete=\"city-id\"\n              />\n            </Grid>\n            {/* <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid> */}\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"#698736\"\n            className={classes.submit}\n            onClick={handleSubmit}\n            disabled={submitting}>\n            {submitting? 'Registering...' : 'Register'}\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"login\" variant=\"body2\">\n                Already have an account? Log in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","/home/alijm/FinalProject/frontend/src/components/pages/customers/search/search.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":127,"column":1,"nodeType":"86","messageId":"87","endLine":143,"endColumn":11},{"ruleId":"88","severity":1,"message":"89","line":5,"column":7,"nodeType":"90","messageId":"91","endLine":5,"endColumn":26},{"ruleId":"80","replacedBy":"92"},{"ruleId":"82","replacedBy":"93"},{"ruleId":"84","severity":1,"message":"85","line":122,"column":1,"nodeType":"86","messageId":"87","endLine":141,"endColumn":16},{"ruleId":"80","replacedBy":"94"},{"ruleId":"82","replacedBy":"95"},{"ruleId":"88","severity":1,"message":"96","line":1,"column":16,"nodeType":"90","messageId":"91","endLine":1,"endColumn":24},{"ruleId":"88","severity":1,"message":"97","line":2,"column":9,"nodeType":"90","messageId":"91","endLine":2,"endColumn":19},{"ruleId":"88","severity":1,"message":"98","line":4,"column":9,"nodeType":"90","messageId":"91","endLine":4,"endColumn":13},{"ruleId":"88","severity":1,"message":"99","line":110,"column":8,"nodeType":"90","messageId":"91","endLine":110,"endColumn":24},{"ruleId":"88","severity":1,"message":"100","line":111,"column":8,"nodeType":"90","messageId":"91","endLine":111,"endColumn":16},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'getTokenFromStorage' is assigned a value but never used.","Identifier","unusedVar",["101"],["102"],["101"],["102"],"'useState' is defined but never used.","'useHistory' is defined but never used.","'Link' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","no-global-assign","no-unsafe-negation"]